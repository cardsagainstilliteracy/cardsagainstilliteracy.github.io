{"version":3,"sources":["images/settings.svg","decks/index.js","decks/lesson1_1phrases.js","decks/lesson1_2phrases.js","decks/lesson1_2essentials.js","decks/lesson1_3phrases.js","decks/lesson1_3essentials.js","decks/lesson1_4phrases.js","decks/lesson1_4essentials.js","decks/lesson1_5phrases.js","decks/lesson1_5essentials.js","decks/lesson1_6phrases.js","decks/lesson1_6essentials.js","decks/sample.js","randomlySort.js","components/Header.js","components/HomeButton.js","components/Body.js","components/Section.js","components/Checkbox.js","containers/SettingsMenu.js","components/SettingsButton.js","components/Button.js","modifierNameToClassName.js","containers/DeckMenu.js","containers/DrillMenu.js","components/AffirmationSwipeIndicator.js","containers/ReadingDrill.js","containers/WritingDrill.js","containers/PostDrillMenu.js","CardsAgainstIlliteracy.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","productionDecks","name","cards","characters","pinyin","meaning","isProduction","concat","halfPositiveHalfNegative","Math","random","randomlySort","arr","clone","slice","i","sort","components_Header","_ref","children","background","react_default","a","createElement","className","components_HomeButton","color","onClick","components_Body","components_Section","header","components_Checkbox","checked","DIRECTIONS","DECK_TYPES","SettingsMenu","selectedSwipeDirection","displayedDeckTypes","areWritingCorrectionsEnabled","onHome","onSelectSwipeDirection","onToggleDeckTypeDisplay","onToggleWritingCorrections","Fragment","map","direction","key","deckType","components_SettingsButton","src","settingsIcon","alt","components_Button","_ref$modifierName","modifierName","baseClass","modifierClasses","split","modifier","Object","toConsumableArray","join","modifierNameToClassName","DeckMenu","decks","onSettings","onSelect","deck","DrillMenu","deckName","onDrillSelect","components_AffirmationSwipeIndicator","normalizedDelta","style","width","left","height","top","TypeError","ReadingDrill","card","remainingCards","isTopCardRevealed","onReveal","onAffirmationSwipeStart","onAffirmationSwipeMove","onAffirmationSwipeEnd","onTouchStart","onTouchMove","onTouchEnd","length","containers_WritingDrill","onPenStart","onPenMove","onPenEnd","canvasRef","onMouseDown","onMouseMove","onMouseUp","window","innerWidth","innerHeight","ref","PostDrillMenu","onRestart","HORIZONTAL_SWIPE_SIZE","VERTICAL_SWIPE_SIZE","SUPPORTS_TOUCH","CardsAgainstIlliteracy","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","type","localStorage","JSON","parse","Phrases","Essentials","forEach","methodName","bind","assertThisInitialized","React","createRef","previousPenLocation","addEventListener","onKeyUp","removeEventListener","getDisplayedDecks","onDeckSelect","includes","onDrillRestart","_this$state","containers_ReadingDrill","onCardReveal","_this$state2","setState","objectSpread","defineProperty","stringify","_this2","keys","filter","some","drill","_this$state$deck","cardsToRepractice","changedTouches","touch","id","identifier","x","clientX","y","clientY","startingTouch","event","preventDefault","newTouch","Array","from","find","t","deltaX","max","min","deltaY","_this$state3","onCardIncorrect","onCardCorrect","_ref2","lessonId","simulateRightSwipe","simulateLeftSwipe","simulateUpSwipe","simulateDownSwipe","_this$canvasRef$curre","current","getContext","clearRect","prevState","_this$canvasRef$curre2","_this3","d","_ref3","_ref4","slicedToArray","offsetY","adjustedY","ctx","fillStyle","fillRect","_ref5","_ref6","beginPath","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","_this4","start","Date","now","render","completionFactor","requestAnimationFrame","_this5","_this6","_this7","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_CardsAgainstIlliteracy","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.382df617.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.5f70f755.svg\";","import sample from './sample';\nimport lesson1_1phrases from './lesson1_1phrases';\nimport lesson1_2phrases from './lesson1_2phrases';\nimport lesson1_2essentials from './lesson1_2essentials';\nimport lesson1_3phrases from './lesson1_3phrases';\nimport lesson1_3essentials from './lesson1_3essentials';\nimport lesson1_4phrases from './lesson1_4phrases';\nimport lesson1_4essentials from './lesson1_4essentials';\nimport lesson1_5phrases from './lesson1_5phrases';\nimport lesson1_5essentials from './lesson1_5essentials';\nimport lesson1_6phrases from './lesson1_6phrases';\nimport lesson1_6essentials from './lesson1_6essentials';\n\nconst productionDecks = [\n  lesson1_1phrases,\n  lesson1_2phrases,\n  lesson1_2essentials,\n  lesson1_3phrases,\n  lesson1_3essentials,\n  lesson1_4phrases,\n  lesson1_4essentials,\n  lesson1_5phrases,\n  lesson1_5essentials,\n  lesson1_6phrases,\n  lesson1_6essentials,\n];\n\nconst devDecks = [\n  sample,\n  ...productionDecks\n];\n\nconst isProduction = !(\n  !process.env.NODE_ENV\n  || process.env.NODE_ENV === 'development'\n);\n\nexport default isProduction ? productionDecks : devDecks;\n","export default {\n  name: '1.1 Phrases',\n  cards: [\n    {\n      characters: '喜欢',\n      pinyin: 'xǐhuān',\n      meaning: 'like',\n    },\n    {\n      characters: '介绍',\n      pinyin: 'jièshào',\n      meaning: 'introduction',\n    },\n    {\n      characters: '一下儿',\n      pinyin: 'yīxiàr',\n      meaning: 'for a short while',\n    },\n    {\n      characters: '唱歌',\n      pinyin: 'chànggē',\n      meaning: 'sing',\n    },\n    {\n      characters: '听音乐',\n      pinyin: 'tīn yīnyuè',\n      meaning: 'listen to music',\n    },\n    {\n      characters: '音乐迷',\n      pinyin: 'yīnyuè mí',\n      meaning: 'music fan',\n    },\n    {\n      characters: '画画儿',\n      pinyin: 'huà huàr',\n      meaning: 'paint',\n    },\n    {\n      characters: '养动物',\n      pinyin: 'yǎng dòngwù',\n      meaning: 'keep a pet',\n    },\n    {\n      characters: '非常',\n      pinyin: 'fēicháng',\n      meaning: 'really',\n    },\n    {\n      characters: '可爱',\n      pinyin: 'kěài',\n      meaning: 'lovely',\n    },\n    {\n      characters: '看电影',\n      pinyin: 'kàn diànyǐng',\n      meaning: 'watch a movie',\n    },\n    {\n      characters: '看电视',\n      pinyin: 'kàn diànshì',\n      meaning: 'watch TV',\n    },\n    {\n      characters: '跳舞',\n      pinyin: 'tiàowǔ',\n      meaning: 'dance',\n    },\n    {\n      characters: '出门',\n      pinyin: 'chūmén',\n      meaning: 'go out',\n    },\n    {\n      characters: '找朋友',\n      pinyin: 'zhǎo péngyǒu',\n      meaning: 'find friends',\n    },\n    {\n      characters: '爱玩儿',\n      pinyin: 'ài wánr',\n      meaning: 'love to play',\n    },\n    {\n      characters: '最...了',\n      pinyin: 'zuì...le',\n      meaning: 'most',\n    },\n    {\n      characters: '杂志',\n      pinyin: 'zázhì',\n      meaning: 'magazine',\n    },\n    {\n      characters: '可以',\n      pinyin: 'kěyǐ',\n      meaning: 'can, may',\n    },\n    {\n      characters: '借',\n      pinyin: 'jiè',\n      meaning: 'borrow',\n    },\n    {\n      characters: '还给',\n      pinyin: 'huán gěi',\n      meaning: 'return',\n    },\n    {\n      characters: '哪期的',\n      pinyin: 'nǎ qí de',\n      meaning: 'which issue',\n    },\n    {\n      characters: '有意思',\n      pinyin: 'yǒuyìsi',\n      meaning: 'interesting',\n    },\n    {\n      characters: '还是',\n      pinyin: 'háishì',\n      meaning: 'or',\n    },\n    {\n      characters: '都',\n      pinyin: 'dōu',\n      meaning: 'all',\n    },\n  ],\n};\n","export default {\n  name: '1.2 Phrases',\n  cards: [\n    {\n      characters: '星期',\n      pinyin: 'xīngqí',\n      meaning: 'week',\n    },\n    {\n      characters: '星期一',\n      pinyin: 'xīngqí yī',\n      meaning: 'Monday',\n    },\n    {\n      characters: '下午',\n      pinyin: 'xiàwǔ',\n      meaning: 'afternoon',\n    },\n    {\n      characters: '有空儿',\n      pinyin: 'yǒu kòng',\n      meaning: 'free',\n    },\n    {\n      characters: '没空儿',\n      pinyin: 'méi kòng',\n      meaning: 'busy',\n    },\n    {\n      characters: '有事儿',\n      pinyin: 'yǒu shìr',\n      meaning: 'busy',\n    },\n    {\n      characters: '没事儿',\n      pinyin: 'méi shìr',\n      meaning: 'free',\n    },\n    {\n      characters: '想',\n      pinyin: 'xiǎng',\n      meaning: 'think, want to',\n    },\n    {\n      characters: '电影',\n      pinyin: 'diànyǐng',\n      meaning: 'movie',\n    },\n    {\n      characters: '行',\n      pinyin: 'xíng',\n      meaning: 'okay',\n    },\n    {\n      characters: '听说',\n      pinyin: 'tīng shuō',\n      meaning: 'it is said that',\n    },\n    {\n      characters: '不错',\n      pinyin: 'bùcuò',\n      meaning: 'good',\n    },\n    {\n      characters: '咱们',\n      pinyin: 'zánmen',\n      meaning: 'all of us',\n    },\n    {\n      characters: '就',\n      pinyin: 'jiù',\n      meaning: 'just',\n    },\n    {\n      characters: '来',\n      pinyin: 'lái',\n      meaning: 'come',\n    },\n    {\n      characters: '去',\n      pinyin: 'qù',\n      meaning: 'go',\n    },\n    {\n      characters: '坐公共汽车',\n      pinyin: 'zuò gōnggòng qìchē',\n      meaning: 'take a bus',\n    },\n    {\n      characters: '把',\n      pinyin: 'bǎ',\n      meaning: 'suggestion particle',\n    },\n    {\n      characters: '太好了',\n      pinyin: 'tài hǎole',\n      meaning: 'great',\n    },\n    {\n      characters: '怎么样',\n      pinyin: 'zěnme yàng',\n      meaning: 'how is it',\n    },\n  ],\n};\n","export default {\n  name: '1.2 Essentials',\n  cards: [\n    {\n      characters: '星期一',\n      pinyin: 'xīngqí yī',\n      meaning: 'Monday',\n    },\n    {\n      characters: '下午',\n      pinyin: 'xiàwǔ',\n      meaning: 'afternoon',\n    },\n    {\n      characters: '有空儿',\n      pinyin: 'yǒu kòng',\n      meaning: 'free',\n    },\n    {\n      characters: '有事儿',\n      pinyin: 'yǒu shìr',\n      meaning: 'busy',\n    },\n    {\n      characters: '想',\n      pinyin: 'xiǎng',\n      meaning: 'think, want to',\n    },\n    {\n      characters: '行',\n      pinyin: 'xíng',\n      meaning: 'okay',\n    },\n    {\n      characters: '听说',\n      pinyin: 'tīng shuō',\n      meaning: 'it is said that',\n    },\n    {\n      characters: '不错',\n      pinyin: 'bùcuò',\n      meaning: 'good',\n    },\n    {\n      characters: '咱们',\n      pinyin: 'zánmen',\n      meaning: 'all of us',\n    },\n    {\n      characters: '就',\n      pinyin: 'jiù',\n      meaning: 'just',\n    },\n    {\n      characters: '来',\n      pinyin: 'lái',\n      meaning: 'come',\n    },\n    {\n      characters: '去',\n      pinyin: 'qù',\n      meaning: 'go',\n    },\n    {\n      characters: '坐公共汽车',\n      pinyin: 'zuò gōnggòng qìchē',\n      meaning: 'take a bus',\n    },\n    {\n      characters: '把',\n      pinyin: 'bǎ',\n      meaning: 'suggestion particle',\n    },\n    {\n      characters: '太好了',\n      pinyin: 'tài hǎole',\n      meaning: 'great',\n    },\n    {\n      characters: '怎么样',\n      pinyin: 'zěnme yàng',\n      meaning: 'how is it',\n    },\n  ],\n};\n","export default {\n  name: '1.3 Phrases',\n  cards: [\n    {\n      characters: '球拍',\n      meaning: 'racket',\n      pinyin: 'qiúpāi'\n    },\n    {\n      characters: '带',\n      meaning: 'bring',\n      pinyin: 'dài'\n    },\n    {\n      characters: '拿',\n      meaning: 'take',\n      pinyin: 'ná'\n    },\n    {\n      characters: '乒乓球',\n      meaning: 'pingpong',\n      pinyin: 'pīngpāngqiú'\n    },\n    {\n      characters: '去',\n      meaning: 'go with',\n      pinyin: 'qù'\n    },\n    {\n      characters: '跟他借',\n      meaning: 'borrow from him',\n      pinyin: 'gēn tā jiè'\n    },\n    {\n      characters: '用一下儿',\n      meaning: 'use',\n      pinyin: 'yòng yīxià ér'\n    },\n    {\n      characters: '杂心',\n      meaning: 'magazine',\n      pinyin: 'zá xīn'\n    },\n    {\n      characters: '对不起',\n      meaning: 'sorry',\n      pinyin: 'duìbùqǐ'\n    },\n    {\n      characters: '行吗',\n      meaning: 'okay',\n      pinyin: 'háng má'\n    },\n    {\n      characters: '还给',\n      meaning: 'give back',\n      pinyin: 'huángěi'\n    },\n    {\n      characters: '明天',\n      meaning: 'tomorrow',\n      pinyin: 'míngtiān'\n    },\n    {\n      characters: '几个',\n      meaning: 'how many',\n      pinyin: 'jǐgè'\n    },\n    {\n      characters: '想去',\n      meaning: 'want to go',\n      pinyin: 'xiǎng qù'\n    },\n    {\n      characters: '借我用',\n      meaning: 'lend to me to use',\n      pinyin: 'jiè wǒ yòng'\n    },\n  ],\n};\n","export default {\n  name: '1.3 Essentials',\n  cards: [\n    {\n      characters: '球拍',\n      pinyin: 'qiúpāi',\n      meaning: 'racket',\n    },\n    {\n      characters: '带',\n      pinyin: 'dài',\n      meaning: 'bring',\n    },\n    {\n      characters: '拿',\n      pinyin: 'ná',\n      meaning: 'take',\n    },\n    {\n      characters: '乒乓球',\n      pinyin: 'pīngpāng qiú',\n      meaning: 'pingpong',\n    },\n    {\n      characters: '跟',\n      pinyin: 'gēn',\n      meaning: 'with',\n    },\n    {\n      characters: '用',\n      pinyin: 'yòng',\n      meaning: 'to use',\n    },\n    {\n      characters: '对不起',\n      pinyin: 'duìbùqǐ',\n      meaning: 'sorry',\n    },\n    {\n      characters: '明天',\n      pinyin: 'míngtiān',\n      meaning: 'tomorrow',\n    },\n  ],\n};\n","export default {\n  name: '1.4 Phrases',\n  cards: [\n    {\n      characters: '会',\n      meaning: 'can',\n      pinyin: 'huì'\n    },\n    {\n      characters: '很会',\n      meaning: 'is good at',\n      pinyin: 'hěn huì'\n    },\n    {\n      characters: '干什么',\n      meaning: 'do what',\n      pinyin: 'gànshénme'\n    },\n    {\n      characters: '没关系',\n      meaning: 'it\\'s ok',\n      pinyin: 'méiguānxì'\n    },\n    {\n      characters: '我教你',\n      meaning: 'I teach you',\n      pinyin: 'wǒ jiāo nǐ'\n    },\n    {\n      characters: '得',\n      meaning: 'must',\n      pinyin: 'dé'\n    },\n    {\n      characters: '现在',\n      meaning: 'now',\n      pinyin: 'xiànzài'\n    },\n    {\n      characters: '能',\n      meaning: 'can',\n      pinyin: 'néng'\n    },\n    {\n      characters: '跟你去',\n      meaning: 'go with you',\n      pinyin: 'gēn nǐ qù'\n    },\n    {\n      characters: '找老师',\n      meaning: 'look for a teacher',\n      pinyin: 'zhǎo lǎoshī'\n    },\n    {\n      characters: '帮...的忙',\n      meaning: 'help',\n      pinyin: 'bāng ... de máng  '\n    },\n    {\n      characters: '程序',\n      meaning: 'program',\n      pinyin: 'chéngxù'\n    },\n    {\n      characters: '怎么啦',\n      meaning: 'what\\'s wrong',\n      pinyin: 'zěnme lā'\n    },\n    {\n      characters: '开始',\n      meaning: 'start',\n      pinyin: 'kāishǐ'\n    },\n    {\n      characters: '讲',\n      meaning: 'speak',\n      pinyin: 'jiǎng'\n    },\n    {\n      characters: '知道',\n      meaning: 'know',\n      pinyin: 'zhīdào'\n    },\n    {\n      characters: '先...然后...',\n      meaning: 'first... then...',\n      pinyin: 'xiān ... rán hòu ...   '\n    },\n    {\n      characters: '字母',\n      meaning: 'letter',\n      pinyin: 'zìmǔ'\n    },\n    {\n      characters: '按这个键',\n      meaning: 'press this button',\n      pinyin: 'àn zhègè jiàn'\n    },\n    {\n      characters: '容易',\n      meaning: 'easy',\n      pinyin: 'róngyì'\n    },\n    {\n      characters: '试一试',\n      meaning: 'give it a try',\n      pinyin: 'shìyīshì'\n    },\n    {\n      characters: '对了',\n      meaning: 'correct',\n      pinyin: 'duì liǎo'\n    },\n  ],\n};\n","export default {\n  name: '1.4 Essentials',\n  cards: [\n    {\n      characters: '很会',\n      meaning: 'is good at',\n      pinyin: 'hěn huì'\n    },\n    {\n      characters: '干什么',\n      meaning: 'do what',\n      pinyin: 'gànshénme'\n    },\n    {\n      characters: '没关系',\n      meaning: 'it\\'s ok',\n      pinyin: 'méiguānxì'\n    },\n    {\n      characters: '教',\n      meaning: 'teach',\n      pinyin: 'jiāo'\n    },\n    {\n      characters: '得',\n      meaning: 'must',\n      pinyin: 'dé'\n    },\n    {\n      characters: '现在',\n      meaning: 'now',\n      pinyin: 'xiànzài'\n    },\n    {\n      characters: '能',\n      meaning: 'can',\n      pinyin: 'néng'\n    },\n    {\n      characters: '帮...的忙',\n      meaning: 'help',\n      pinyin: 'bāng ... de máng  '\n    },\n    {\n      characters: '程序',\n      meaning: 'program',\n      pinyin: 'chéngxù'\n    },\n    {\n      characters: '怎么啦',\n      meaning: 'what\\'s wrong',\n      pinyin: 'zěnme lā'\n    },\n    {\n      characters: '开始',\n      meaning: 'start',\n      pinyin: 'kāishǐ'\n    },\n    {\n      characters: '讲',\n      meaning: 'speak',\n      pinyin: 'jiǎng'\n    },\n    {\n      characters: '知道',\n      meaning: 'know',\n      pinyin: 'zhīdào'\n    },\n    {\n      characters: '先...然后...',\n      meaning: 'first... then...',\n      pinyin: 'xiān ... rán hòu ...   '\n    },\n    {\n      characters: '字母',\n      meaning: 'letter',\n      pinyin: 'zìmǔ'\n    },\n    {\n      characters: '按这个键',\n      meaning: 'press this button',\n      pinyin: 'àn zhègè jiàn'\n    },\n    {\n      characters: '容易',\n      meaning: 'easy',\n      pinyin: 'róngyì'\n    },\n    {\n      characters: '试一试',\n      meaning: 'give it a try',\n      pinyin: 'shìyīshì'\n    },\n  ],\n};\n","export default {\n  name: '1.5 Phrases',\n  cards: [\n    {\n      characters: '介绍',\n      meaning: 'introduction',\n      pinyin: 'jièshào'\n    },\n    {\n      characters: '自己',\n      meaning: 'self',\n      pinyin: 'zìjǐ'\n    },\n    {\n      characters: '非常',\n      meaning: 'very',\n      pinyin: 'fēicháng'\n    },\n    {\n      characters: '得',\n      meaning: 'adverb particle',\n      pinyin: 'dé'\n    },\n    {\n      characters: '怎么样',\n      meaning: 'how about it',\n      pinyin: 'zěnmeyàng'\n    },\n    {\n      characters: '写字',\n      meaning: 'write',\n      pinyin: 'xiězì'\n    },\n    {\n      characters: '说中国话',\n      meaning: 'speak Chinese',\n      pinyin: 'shuō zhōngguó huà'\n    },\n    {\n      characters: '打字',\n      meaning: 'type',\n      pinyin: 'dǎzì'\n    },\n    {\n      characters: '唱歌',\n      meaning: 'sing',\n      pinyin: 'chànggē'\n    },\n    {\n      characters: '吃饭',\n      meaning: 'eat',\n      pinyin: 'chīfàn'\n    },\n    {\n      characters: '慢',\n      meaning: 'slow',\n      pinyin: 'màn'\n    },\n    {\n      characters: '快',\n      meaning: 'fast',\n      pinyin: 'kuài'\n    },\n    {\n      characters: '不太好',\n      meaning: 'not very good',\n      pinyin: 'bùtàihǎo'\n    },\n    {\n      characters: '流利',\n      meaning: 'fluent',\n      pinyin: 'liúlì'\n    },\n    {\n      characters: '更',\n      meaning: 'more',\n      pinyin: 'gèng'\n    },\n    {\n      characters: '体育运动',\n      meaning: 'sports',\n      pinyin: 'tǐyùyùndòng'\n    },\n    {\n      characters: '好听',\n      meaning: 'pleasantly sounding',\n      pinyin: 'hǎotīng'\n    },\n    {\n      characters: '好看',\n      meaning: 'good looking',\n      pinyin: 'hǎokàn'\n    },\n    {\n      characters: '好吃',\n      meaning: 'good to eat',\n      pinyin: 'hǎochī'\n    },\n    {\n      characters: '太乱了',\n      meaning: 'too messy',\n      pinyin: 'tài luàn le'\n    },\n  ],\n};\n","export default {\n  name: '1.5 Essentials',\n  cards: [\n    {\n      characters: '自己',\n      meaning: 'self',\n      pinyin: 'zìjǐ'\n    },\n    {\n      characters: '写字',\n      meaning: 'write',\n      pinyin: 'xiězì'\n    },\n    {\n      characters: '说中国话',\n      meaning: 'speak Chinese',\n      pinyin: 'shuō zhōngguó huà'\n    },\n    {\n      characters: '吃饭',\n      meaning: 'eat',\n      pinyin: 'chīfàn'\n    },\n    {\n      characters: '慢',\n      meaning: 'slow',\n      pinyin: 'màn'\n    },\n    {\n      characters: '快',\n      meaning: 'fast',\n      pinyin: 'kuài'\n    },\n    {\n      characters: '流利',\n      meaning: 'fluent',\n      pinyin: 'liúlì'\n    },\n    {\n      characters: '更',\n      meaning: 'more',\n      pinyin: 'gèng'\n    },\n    {\n      characters: '体育运动',\n      meaning: 'sports',\n      pinyin: 'tǐyùyùndòng'\n    },\n    {\n      characters: '太乱了',\n      meaning: 'too messy',\n      pinyin: 'tài luàn le'\n    },\n  ],\n};\n","export default {\n  name: '1.6 Phrases',\n  cards: [\n    {\n      characters: '电话',\n      meaning: 'phone',\n      pinyin: 'diànhuà'\n    },\n    {\n      characters: '打电话',\n      meaning: 'call',\n      pinyin: 'dǎdiànhuà'\n    },\n    {\n      characters: '给...打电话',\n      meaning: 'call',\n      pinyin: 'gěi ... dǎ diàn huà'\n    },\n    {\n      characters: '电话号码',\n      meaning: 'phone number',\n      pinyin: 'diànhuàhàomǎ'\n    },\n    {\n      characters: '接电话',\n      meaning: 'answer a call',\n      pinyin: 'jiēdiànhuà'\n    },\n    {\n      characters: '回电话',\n      meaning: 'call back',\n      pinyin: 'huí diànhuà'\n    },\n    {\n      characters: '说一遍',\n      meaning: 'say it once',\n      pinyin: 'shuō yībiàn'\n    },\n    {\n      characters: '再说一遍',\n      meaning: 'say it again',\n      pinyin: 'zàishuō yībiàn'\n    },\n    {\n      characters: '一会儿',\n      meaning: 'for a short while',\n      pinyin: 'yīhuìer'\n    },\n    {\n      characters: '回来',\n      meaning: 'come back',\n      pinyin: 'huílái'\n    },\n    {\n      characters: '刚才',\n      meaning: 'just now',\n      pinyin: 'gāngcái'\n    },\n    {\n      characters: '让',\n      meaning: 'let',\n      pinyin: 'ràng'\n    },\n    {\n      characters: '什么时候',\n      meaning: 'when',\n      pinyin: 'shénme shíhòu'\n    },\n    {\n      characters: '几点',\n      meaning: 'what time',\n      pinyin: 'jīdiǎn'\n    },\n    {\n      characters: '一点半',\n      meaning: '1:30',\n      pinyin: 'yīdiǎnbàn'\n    },\n    {\n      characters: '九点一刻',\n      meaning: '9:15',\n      pinyin: 'jiǔdiǎn yīkè'\n    },\n  ],\n};\n","export default {\n  name: '1.6 Essentials',\n  cards: [\n    {\n      characters: '电话号码',\n      meaning: 'phone number',\n      pinyin: 'diànhuàhàomǎ'\n    },\n    {\n      characters: '接电话',\n      meaning: 'answer a call',\n      pinyin: 'jiēdiànhuà'\n    },\n    {\n      characters: '再说一遍',\n      meaning: 'say it again',\n      pinyin: 'zàishuō yībiàn'\n    },\n    {\n      characters: '回来',\n      meaning: 'come back',\n      pinyin: 'huílái'\n    },\n    {\n      characters: '刚才',\n      meaning: 'just now',\n      pinyin: 'gāngcái'\n    },\n    {\n      characters: '让',\n      meaning: 'let',\n      pinyin: 'ràng'\n    },\n    {\n      characters: '什么时候',\n      meaning: 'when',\n      pinyin: 'shénme shíhòu'\n    },\n    {\n      characters: '几点',\n      meaning: 'what time',\n      pinyin: 'jīdiǎn'\n    },\n    {\n      characters: '半',\n      meaning: 'half',\n      pinyin: 'bàn'\n    },\n    {\n      characters: '刻',\n      meaning: 'quarter',\n      pinyin: 'kè'\n    },\n  ],\n};\n","export default {\n  name: 'Sample Phrases',\n  cards: [\n    {\n      characters: '坐公共汽车',\n      pinyin: 'zuò gōnggòng qìchē',\n      meaning: 'take a bus',\n    },\n    {\n      characters: '介绍',\n      pinyin: 'jiè shào',\n      meaning: 'introduction',\n    },\n    {\n      characters: '一下儿',\n      pinyin: 'yī xiàr',\n      meaning: 'for a short while',\n    },\n  ],\n};\n","const halfPositiveHalfNegative = () => Math.random() - 0.5;\n\nexport default (arr) => {\n  const clone = arr.slice();\n  for (let i = 0; i < 256; i++) {\n    clone.sort(halfPositiveHalfNegative);\n  }\n  return clone;\n};\n","import React from 'react';\nimport '../styles/Header.css';\n\nexport default ({ children, background }) => (\n  <div className={'Header Header--' + background}>{children}</div>\n);\n","import React from 'react';\nimport '../styles/HomeButton.css';\n\nexport default ({ color, onClick }) => (\n  <button className={'HomeButton HomeButton--' + color} onClick={onClick}>\n    x\n  </button>\n);\n","import React from 'react';\nimport '../styles/Body.css';\n\nexport default ({ children }) => (\n  <div className=\"Body\">{children}</div>\n);\n","import React from 'react';\nimport '../styles/Section.css';\n\nexport default ({ header, children }) => (\n  <div className=\"Section\">\n    <div className=\"Section__Header\">{header}</div>\n    {children}\n  </div>\n);\n","import React from 'react';\nimport '../styles/Checkbox.css';\n\nexport default ({ children, checked, onClick }) => (\n  <div\n    className={'Checkbox' + (checked ? ' Checkbox--checked' : '')}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import React from 'react';\nimport Header from '../components/Header';\nimport HomeButton from '../components/HomeButton';\nimport Body from '../components/Body';\nimport Section from '../components/Section';\nimport Checkbox from '../components/Checkbox';\n\nconst DIRECTIONS = ['Right', 'Left', 'Up', 'Down'];\nconst DECK_TYPES = ['Phrases', 'Essentials'];\n\nexport default ({\n  selectedSwipeDirection,\n  displayedDeckTypes,\n  areWritingCorrectionsEnabled,\n\n  onHome,\n  onSelectSwipeDirection,\n  onToggleDeckTypeDisplay,\n  onToggleWritingCorrections,\n}) => (\n  <>\n    <Header background=\"blue\">Settings</Header>\n    <HomeButton color=\"blue\" onClick={onHome} />\n    <Body>\n      <Section header=\"Correct Answer Swipe Direction\">\n        {\n          DIRECTIONS.map((direction) => (\n            <Checkbox\n              checked={direction === selectedSwipeDirection}\n              onClick={() => onSelectSwipeDirection(direction)}\n              key={direction}\n            >\n              {direction}\n            </Checkbox>\n          ))\n        }\n      </Section>\n      <Section header=\"Decks to Display\">\n        {\n          DECK_TYPES.map((deckType) => (\n            <Checkbox\n              checked={displayedDeckTypes[deckType]}\n              onClick={() => onToggleDeckTypeDisplay(deckType)}\n              key={deckType}\n            >\n              {deckType}\n            </Checkbox>\n          ))\n        }\n      </Section>\n      <Section header=\"Writing Corrections\">\n        <Checkbox\n          checked={areWritingCorrectionsEnabled}\n          onClick={onToggleWritingCorrections}\n        >\n          Enabled?\n        </Checkbox>\n      </Section>\n    </Body>\n  </>\n);\n","import React from 'react';\nimport '../styles/SettingsButton.css';\nimport settingsIcon from '../images/settings.svg';\n\nexport default ({ onClick }) => (\n  <img\n    src={settingsIcon}\n    alt=\"Settings button\"\n    className=\"SettingsButton\"\n    onClick={onClick}\n  />\n);\n","import React from 'react';\nimport '../styles/Button.css';\nimport modifierNameToClassName from '../modifierNameToClassName';\n\nexport default ({ modifierName = '', onClick, children }) => (\n  <div\n    className={modifierNameToClassName('Button', modifierName)}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","export default (baseClass, modifierName) => {\n  const modifiers = modifierName === '' ? [] : modifierName.split(' ');\n  const modifierClasses = modifiers.map(modifier => baseClass + '--' + modifier);\n  return baseClass + ['', ...modifierClasses].join(' ');\n};\n","import React from 'react';\nimport Header from '../components/Header';\nimport SettingsButton from '../components/SettingsButton';\nimport Body from '../components/Body';\nimport Button from '../components/Button';\n\nexport default ({\n  decks,\n\n  onSettings,\n  onSelect,\n}) => (\n  <>\n    <Header background=\"white\">Lessons</Header>\n    <SettingsButton onClick={onSettings} />\n    <Body>\n      {decks.map(deck => (\n        <Button\n          modifierName=\"blue shadow\"\n          onClick={() => onSelect(deck)}\n          key={deck.name}\n        >\n          {deck.name}\n        </Button>\n      ))}\n    </Body>\n  </>\n);\n","import React from 'react';\nimport Header from '../components/Header';\nimport HomeButton from '../components/HomeButton';\nimport Button from '../components/Button';\n\nexport default ({ deckName, onDrillSelect, onHome }) => (\n  <>\n    <Header background=\"white\">{deckName}</Header>\n    <HomeButton color=\"white\" onClick={onHome} />\n    <Button\n      modifierName=\"blue shadow\"\n      onClick={() => onDrillSelect('READING_DRILL')}\n    >\n      Reading Drill\n    </Button>\n    <Button\n      modifierName=\"blue shadow\"\n      onClick={() => onDrillSelect('WRITING_DRILL')}\n    >\n      Writing Drill\n    </Button>\n  </>\n);\n","import React from 'react';\nimport '../styles/AffirmationSwipeIndicator.css';\n\nexport default ({ selectedSwipeDirection, normalizedDelta }) => {\n  switch (selectedSwipeDirection) {\n    case 'Right':\n      return (\n        normalizedDelta > 0\n          ? (\n            <div\n              className=\"AffirmationSwipeIndicator--horizontal--correct\"\n              style={{\n                width: normalizedDelta * 100 + 'vw',\n              }}\n            />\n          )\n          : (\n            <div\n              className=\"AffirmationSwipeIndicator--horizontal--incorrect\"\n              style={{\n                left: (1 + normalizedDelta) * 100 + 'vw',\n                width: -normalizedDelta * 100 + 'vw',\n              }}\n            />\n          )\n      );\n    case 'Left':\n      return (\n        normalizedDelta > 0\n          ? (\n            <div\n              className=\"AffirmationSwipeIndicator--horizontal--incorrect\"\n              style={{\n                width: normalizedDelta * 100 + 'vw',\n              }}\n            />\n          )\n          : (\n            <div\n              className=\"AffirmationSwipeIndicator--horizontal--correct\"\n              style={{\n                left: (1 + normalizedDelta) * 100 + 'vw',\n                width: -normalizedDelta * 100 + 'vw',\n              }}\n            />\n          )\n      );\n    case 'Up':\n      return (\n        normalizedDelta > 0\n          ? (\n            <div\n              className=\"AffirmationSwipeIndicator--vertical--incorrect\"\n              style={{\n                height: normalizedDelta * 89 + 'vh',\n              }}\n            />\n          )\n          : (\n            <div\n              className=\"AffirmationSwipeIndicator--vertical--correct\"\n              style={{\n                top: 11 + (1 + normalizedDelta) * 89 + 'vh',\n                height: -normalizedDelta * 89 + 'vh',\n              }}\n            />\n          )\n      );\n    case 'Down':\n      return (\n        normalizedDelta > 0\n          ? (\n            <div\n              className=\"AffirmationSwipeIndicator--vertical--correct\"\n              style={{\n                height: normalizedDelta * 89 + 'vh',\n              }}\n            />\n          )\n          : (\n            <div\n              className=\"AffirmationSwipeIndicator--vertical--incorrect\"\n              style={{\n                top: 11 + (1 + normalizedDelta) * 89 + 'vh',\n                height: -normalizedDelta * 89 + 'vh',\n              }}\n            />\n          )\n      );\n    default:\n      throw new TypeError('Illegal swipe direction: ' + selectedSwipeDirection);\n  }\n}\n","import React from 'react';\nimport '../styles/ReadingDrill.css';\nimport HomeButton from '../components/HomeButton';\nimport Header from '../components/Header';\nimport AffirmationSwipeIndicator from '../components/AffirmationSwipeIndicator';\n\nconst getCardFrontClassName = card => (\n  'ReadingDrill__CardFront' + (\n    card.characters.length > 4 ? ' ReadingDrill__CardFront--small' : ''\n  )\n);\n\nconst ReadingDrill = ({\n  deckName,\n  remainingCards,\n  isTopCardRevealed,\n  selectedSwipeDirection,\n  normalizedDelta,\n\n  onHome,\n  onReveal,\n  onAffirmationSwipeStart,\n  onAffirmationSwipeMove,\n  onAffirmationSwipeEnd,\n}) => {\n  if (!isTopCardRevealed) {\n    return (\n      <>\n        <Header background=\"blue\">{deckName}</Header>\n        <HomeButton color=\"blue\" onClick={onHome} />\n\n        <div\n          className=\"ReadingDrill__CardFrontContainer\"\n          onClick={onReveal}\n        >\n          <div className={getCardFrontClassName(remainingCards[0])}>\n            {remainingCards[0].characters}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Header background=\"blue\">{deckName}</Header>\n      <HomeButton color=\"blue\" onClick={onHome} />\n\n      <div\n        className=\"ReadingDrill__CardBackContainer\"\n        onTouchStart={onAffirmationSwipeStart}\n        onTouchMove={onAffirmationSwipeMove}\n        onTouchEnd={onAffirmationSwipeEnd}\n      >\n        <div className=\"ReadingDrill__CardBack\">\n          <div>{remainingCards[0].pinyin}</div>\n          <div>({remainingCards[0].meaning})</div>\n        </div>\n      </div>\n\n      <AffirmationSwipeIndicator\n        selectedSwipeDirection={selectedSwipeDirection}\n        normalizedDelta={normalizedDelta}\n      />\n    </>\n  );\n};\n\nexport default ReadingDrill;\n","import React from 'react';\nimport '../styles/WritingDrill.css';\nimport HomeButton from '../components/HomeButton';\nimport Header from '../components/Header';\nimport AffirmationSwipeIndicator from '../components/AffirmationSwipeIndicator';\n\nexport default ({\n  deckName,\n  remainingCards,\n  isTopCardRevealed,\n  selectedSwipeDirection,\n  normalizedDelta,\n  areWritingCorrectionsEnabled,\n\n  onHome,\n  onPenStart,\n  onPenMove,\n  onPenEnd,\n  onReveal,\n  onAffirmationSwipeStart,\n  onAffirmationSwipeMove,\n  onAffirmationSwipeEnd,\n\n  canvasRef,\n}) => {\n  if (isTopCardRevealed) {\n    return (\n      <>\n        <Header background=\"blue\">{deckName}</Header>\n        <HomeButton color=\"blue\" onClick={onHome} />\n        <canvas\n          onTouchStart={\n            areWritingCorrectionsEnabled ? onPenStart : onAffirmationSwipeStart\n          }\n          onTouchMove={\n            areWritingCorrectionsEnabled ? onPenMove : onAffirmationSwipeMove\n          }\n          onTouchEnd={\n            areWritingCorrectionsEnabled ? onPenEnd : onAffirmationSwipeEnd\n          }\n          onMouseDown={\n            areWritingCorrectionsEnabled ? onPenStart : onAffirmationSwipeStart\n          }\n          onMouseMove={\n            areWritingCorrectionsEnabled ? onPenMove : onAffirmationSwipeMove\n          }\n          onMouseUp={\n            areWritingCorrectionsEnabled ? onPenEnd : onAffirmationSwipeEnd\n          }\n          width={window.innerWidth}\n          height={window.innerHeight * 0.62}\n          ref={canvasRef}\n        />\n        <div\n          className=\"WritingDrill__CharacterContainer\"\n          onTouchStart={onAffirmationSwipeStart}\n          onTouchMove={onAffirmationSwipeMove}\n          onTouchEnd={onAffirmationSwipeEnd}\n        >\n          <div className=\"WritingDrill__Characters\">\n            {remainingCards[0].characters}\n          </div>\n        </div>\n        <AffirmationSwipeIndicator\n          selectedSwipeDirection={selectedSwipeDirection}\n          normalizedDelta={normalizedDelta}\n        />\n      </>\n    );\n  }\n  return (\n    <>\n      <Header background=\"blue\">{deckName}</Header>\n      <HomeButton color=\"blue\" onClick={onHome} />\n      <canvas\n        onTouchStart={onPenStart}\n        onTouchMove={onPenMove}\n        onMouseDown={onPenStart}\n        onMouseMove={onPenMove}\n        onMouseUp={onPenEnd}\n        width={window.innerWidth}\n        height={window.innerHeight * 0.62}\n        ref={canvasRef}\n      />\n      <div\n        className=\"WritingDrill__Pinyin\"\n        onClick={onReveal}\n      >\n        {remainingCards[0].pinyin}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n\nexport default ({ deckName, onRestart, onHome }) => (\n  <>\n    <Header background=\"white\">{deckName}</Header>\n    <Button\n      modifierName=\"blue shadow\"\n      onClick={onRestart}\n    >\n      Restart\n    </Button>\n    <Button\n      modifierName=\"blue shadow\"\n      onClick={onHome}\n    >\n      Home\n    </Button>\n  </>\n);\n","import React from 'react';\nimport decks from './decks/index';\nimport randomlySort from './randomlySort';\nimport SettingsMenu from './containers/SettingsMenu';\nimport DeckMenu from './containers/DeckMenu';\nimport DrillMenu from './containers/DrillMenu';\nimport ReadingDrill from './containers/ReadingDrill';\nimport WritingDrill from './containers/WritingDrill';\nimport PostDrillMenu from './containers/PostDrillMenu';\n\nconst HORIZONTAL_SWIPE_SIZE = window.innerWidth * 0.30;\nconst VERTICAL_SWIPE_SIZE = window.innerHeight * 0.20;\n\nconst SIMULATED_SWIPE_DURATION = 0.15e3;\nconst SIMULATED_SWIPE_PAUSE_FACTOR = 0.2;\n\nconst PEN_STROKE_WIDTH = 2;\n\nconst PEN_GUESS_COLOR = '#000088';\nconst PEN_CORRECTION_COLOR = '#0088FF';\n\nconst SUPPORTS_TOUCH = 'ontouchstart' in window;\n\nclass CardsAgainstIlliteracy extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      type: 'DECK_MENU',\n      selectedSwipeDirection: localStorage.selectedSwipeDirection || 'Right',\n      displayedDeckTypes: localStorage.displayedDeckTypes\n        ? JSON.parse(localStorage.displayedDeckTypes)\n        : { Phrases: true, Essentials: true },\n      areWritingCorrectionsEnabled: localStorage.areWritingCorrectionsEnabled === 'true',\n    };\n\n    [\n      'onSettings',\n      'onSelectSwipeDirection',\n      'onToggleDeckTypeDisplay',\n      'onToggleWritingCorrections',\n      'onDeckSelect',\n      'onDrillSelect',\n      'onCardReveal',\n      'onAffirmationSwipeStart',\n      'onAffirmationSwipeMove',\n      'onAffirmationSwipeEnd',\n      'onKeyUp',\n      'onCardCorrect',\n      'onCardIncorrect',\n      'onDrillRestart',\n      'onHome',\n      'onPenStart',\n      'onPenMove',\n      'onPenEnd',\n    ].forEach((methodName) => {\n      this[methodName] = this[methodName].bind(this);\n    });\n\n    this.canvasRef = React.createRef();\n    this.previousPenLocation = null;\n  }\n\n  componentDidMount() {\n    if (!SUPPORTS_TOUCH) {\n      window.addEventListener('keyup', this.onKeyUp);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!SUPPORTS_TOUCH) {\n      window.removeEventListener('keyup', this.onKeyUp);\n    }\n  }\n\n  render() {\n    const { type } = this.state;\n    if (type === 'SETTINGS_MENU') {\n      return (\n        <SettingsMenu\n          selectedSwipeDirection={this.state.selectedSwipeDirection}\n          displayedDeckTypes={this.state.displayedDeckTypes}\n          areWritingCorrectionsEnabled={this.state.areWritingCorrectionsEnabled}\n\n          onHome={this.onHome}\n          onSelectSwipeDirection={this.onSelectSwipeDirection}\n          onToggleDeckTypeDisplay={this.onToggleDeckTypeDisplay}\n          onToggleWritingCorrections={this.onToggleWritingCorrections}\n        />\n      );\n    } else if (type === 'DECK_MENU') {\n      return (\n        <DeckMenu\n          decks={this.getDisplayedDecks()}\n\n          onSettings={this.onSettings}\n          onSelect={this.onDeckSelect}\n        />\n      );\n    } else if (type === 'DRILL_MENU') {\n      const { name } = this.state.deck;\n      return (\n        <DrillMenu\n          deckName={name}\n\n          onDrillSelect={this.onDrillSelect}\n          onHome={this.onHome}\n        />\n      );\n    } else if (\n      ['READING_DRILL', 'WRITING_DRILL'].includes(type)\n      && this.state.remainingCards.length === 0\n    ) {\n      return (\n        <PostDrillMenu\n          deckName={this.state.deckName}\n          onRestart={this.onDrillRestart}\n          onHome={this.onHome}\n        />\n      );\n    } else if (type === 'READING_DRILL') {\n      const {\n        deckName,\n        remainingCards,\n        isTopCardRevealed,\n        selectedSwipeDirection,\n        normalizedDelta,\n      } = this.state;\n\n      return (\n        <ReadingDrill\n          deckName={deckName}\n          remainingCards={remainingCards}\n          isTopCardRevealed={isTopCardRevealed}\n          selectedSwipeDirection={selectedSwipeDirection}\n          normalizedDelta={normalizedDelta}\n\n          onHome={this.onHome}\n          onReveal={this.onCardReveal}\n          onAffirmationSwipeStart={this.onAffirmationSwipeStart}\n          onAffirmationSwipeMove={this.onAffirmationSwipeMove}\n          onAffirmationSwipeEnd={this.onAffirmationSwipeEnd}\n        />\n      );\n    } else if (type === 'WRITING_DRILL') {\n      const {\n        deckName,\n        remainingCards,\n        isTopCardRevealed,\n        selectedSwipeDirection,\n        normalizedDelta,\n        areWritingCorrectionsEnabled,\n      } = this.state;\n\n      return (\n        <WritingDrill\n          deckName={deckName}\n          remainingCards={remainingCards}\n          isTopCardRevealed={isTopCardRevealed}\n          selectedSwipeDirection={selectedSwipeDirection}\n          normalizedDelta={normalizedDelta}\n          areWritingCorrectionsEnabled={areWritingCorrectionsEnabled}\n\n          onHome={this.onHome}\n          onPenStart={this.onPenStart}\n          onPenMove={this.onPenMove}\n          onPenEnd={this.onPenEnd}\n          onReveal={this.onCardReveal}\n          onAffirmationSwipeStart={this.onAffirmationSwipeStart}\n          onAffirmationSwipeMove={this.onAffirmationSwipeMove}\n          onAffirmationSwipeEnd={this.onAffirmationSwipeEnd}\n\n          canvasRef={this.canvasRef}\n        />\n      );\n    }\n  }\n\n  onSettings() {\n    this.setState({\n      type: 'SETTINGS_MENU',\n    });\n  }\n\n  onSelectSwipeDirection(selectedSwipeDirection) {\n    this.setState({\n      selectedSwipeDirection,\n    });\n    localStorage.selectedSwipeDirection = selectedSwipeDirection;\n  }\n\n  onToggleDeckTypeDisplay(deckType) {\n    const displayedDeckTypes = {\n      ...this.state.displayedDeckTypes,\n      [deckType]: !this.state.displayedDeckTypes[deckType],\n    };\n    this.setState({\n      displayedDeckTypes,\n    });\n    localStorage.displayedDeckTypes = JSON.stringify(displayedDeckTypes);\n  }\n\n  onToggleWritingCorrections() {\n    const areWritingCorrectionsEnabled = !this.state.areWritingCorrectionsEnabled;\n    this.setState({\n      areWritingCorrectionsEnabled,\n    });\n    localStorage.areWritingCorrectionsEnabled = areWritingCorrectionsEnabled;\n  }\n\n  getDisplayedDecks() {\n    const displayedDeckTypes = Object.keys(this.state.displayedDeckTypes)\n      .filter(key => this.state.displayedDeckTypes[key]);\n    return decks.filter(deck => (\n      displayedDeckTypes.some(deckType => deck.name.includes(deckType))\n    ));\n  }\n\n  onDeckSelect(deck) {\n    this.setState({\n      type: 'DRILL_MENU',\n      deck,\n    });\n  }\n\n  onDrillSelect(drill) {\n    if (drill === 'READING_DRILL' || drill === 'WRITING_DRILL') {\n      const { name, cards } = this.state.deck;\n      this.setState({\n        type: drill,\n        deckName: name,\n        remainingCards: randomlySort(cards),\n        isTopCardRevealed: false,\n        normalizedDelta: 0,\n        cardsToRepractice: [],\n      });\n    }\n  }\n\n  onAffirmationSwipeStart({ changedTouches }) {\n    if (!this.state.isTopCardRevealed) {\n      return;\n    }\n\n    const isSwipeDirectionHorizontal = ['Right', 'Left']\n      .includes(this.state.selectedSwipeDirection);\n\n    const touch = isSwipeDirectionHorizontal\n      ? {\n        id: changedTouches[0].identifier,\n        x: changedTouches[0].clientX,\n      }\n      : {\n        id: changedTouches[0].identifier,\n        y: changedTouches[0].clientY,\n      };\n\n    this.setState({\n      startingTouch: touch,\n      normalizedDelta: 0,\n    });\n  }\n\n  onAffirmationSwipeMove(event) {\n    event.preventDefault();\n    const { changedTouches } = event;\n    const { id } = this.state.startingTouch;\n    const newTouch = Array.from(changedTouches)\n      .find(t => t.identifier === id);\n    if (!newTouch) {\n      return;\n    }\n    const isSwipeDirectionHorizontal = ['Right', 'Left']\n      .includes(this.state.selectedSwipeDirection);\n    if (isSwipeDirectionHorizontal) {\n      const deltaX = newTouch.clientX - this.state.startingTouch.x;\n      const normalizedDelta = Math.max(\n        -1,\n        Math.min(1, deltaX / HORIZONTAL_SWIPE_SIZE),\n      );\n      this.setState({\n        normalizedDelta,\n      });\n    } else {\n      const deltaY = newTouch.clientY - this.state.startingTouch.y;\n      const normalizedDelta = Math.max(\n        -1,\n        Math.min(1, deltaY / VERTICAL_SWIPE_SIZE),\n      );\n      this.setState({\n        normalizedDelta,\n      });\n    }\n  }\n\n  onAffirmationSwipeEnd() {\n    const { selectedSwipeDirection, normalizedDelta } = this.state;\n    this.setState({\n      startingTouch: null,\n      normalizedDelta: 0,\n    });\n    if (\n      (selectedSwipeDirection === 'Right' && normalizedDelta === -1)\n        || (selectedSwipeDirection === 'Left' && normalizedDelta === 1)\n        || (selectedSwipeDirection === 'Up' && normalizedDelta === 1)\n        || (selectedSwipeDirection === 'Down' && normalizedDelta === -1)\n    ) {\n      this.onCardIncorrect();\n    } else if (\n      (selectedSwipeDirection === 'Right' && normalizedDelta === 1)\n        || (selectedSwipeDirection === 'Left' && normalizedDelta === -1)\n        || (selectedSwipeDirection === 'Up' && normalizedDelta === -1)\n        || (selectedSwipeDirection === 'Down' && normalizedDelta === 1)\n    ) {\n      this.onCardCorrect();\n    }\n  }\n\n  onKeyUp({ key }) {\n\n    if (this.state.lessonId !== null && this.state.isTopCardRevealed) {\n      const isSwipeDirectionHorizontal = ['Right', 'Left']\n        .includes(this.state.selectedSwipeDirection);\n\n      if (isSwipeDirectionHorizontal) {\n        if (key === 'ArrowRight' || key === 'Right') {\n          this.simulateRightSwipe();\n        } else if (key === 'ArrowLeft' || key === 'Left') {\n          this.simulateLeftSwipe();\n        }\n      } else {\n        if (key === 'ArrowUp' || key === 'Up') {\n          this.simulateUpSwipe();\n        } else if (key === 'ArrowDown' || key === 'Down') {\n          this.simulateDownSwipe();\n        }\n      }\n    }\n  }\n\n  onCardReveal() {\n    this.setState({\n      isTopCardRevealed: true,\n      normalizedDelta: 0,\n    });\n  }\n\n  onCardCorrect() {\n    if (this.state.type === 'WRITING_DRILL') {\n      const { width, height } = this.canvasRef.current;\n      const ctx = this.canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, width, height);\n    }\n\n    this.setState(prevState => {\n      if (prevState.remainingCards.length > 1) {\n        return {\n          remainingCards: prevState.remainingCards.slice(1),\n          isTopCardRevealed: false,\n        };\n      }\n      return {\n        remainingCards: randomlySort(prevState.cardsToRepractice),\n        cardsToRepractice: [],\n        isTopCardRevealed: false,\n      };\n    });\n  }\n\n  onCardIncorrect() {\n    if (this.state.type === 'WRITING_DRILL') {\n      const { width, height } = this.canvasRef.current;\n      const ctx = this.canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, width, height);\n    }\n\n    this.setState(prevState => {\n      if (prevState.remainingCards.length > 1) {\n        return {\n          remainingCards: prevState.remainingCards.slice(1),\n          cardsToRepractice: prevState.cardsToRepractice.concat([\n            prevState.remainingCards[0]\n          ]),\n          isTopCardRevealed: false,\n        };\n      }\n      return {\n        remainingCards: randomlySort(prevState.cardsToRepractice\n          .concat([prevState.remainingCards[0]])),\n        cardsToRepractice: [],\n        isTopCardRevealed: false,\n      };\n    });\n  }\n\n  onDrillRestart() {\n    if (\n      this.state.type === 'READING_DRILL'\n      || this.state.type === 'WRITING_DRILL'\n    ) {\n      const deck = decks.find(d => d.name === this.state.deckName);\n      const { name, cards } = deck;\n      this.setState({\n        type: this.state.type,\n        deckName: name,\n        remainingCards: randomlySort(cards),\n        isTopCardRevealed: false,\n        normalizedDelta: 0,\n        cardsToRepractice: [],\n      });\n    }\n  }\n\n  onHome() {\n    this.setState({\n      type: 'DECK_MENU',\n    });\n  }\n\n  onPenStart(event) {\n    const [clientX, clientY] = event.type === 'touchstart'\n      ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n      : [event.clientX, event.clientY];\n    const offsetY = window.innerHeight * 0.11;\n    const adjustedY = clientY - offsetY;\n    this.previousPenLocation = {\n      x: clientX,\n      y: adjustedY,\n    };\n    const ctx = this.canvasRef.current.getContext('2d');\n    ctx.fillStyle = this.state.isTopCardRevealed ? PEN_CORRECTION_COLOR : PEN_GUESS_COLOR;\n    ctx.fillRect(\n      clientX,\n      clientY - offsetY,\n      PEN_STROKE_WIDTH,\n      PEN_STROKE_WIDTH,\n    );\n  }\n\n  onPenMove(event) {\n    event.preventDefault();\n    if (this.previousPenLocation === null) {\n      return;\n    }\n\n    const [clientX, clientY] = event.type === 'touchmove'\n      ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n      : [event.clientX, event.clientY];\n    const offsetY = window.innerHeight * 0.11;\n    const adjustedY = clientY - offsetY;\n    const ctx = this.canvasRef.current.getContext('2d');\n    ctx.fillRect(clientX, clientY - offsetY, 1, 1);\n    ctx.beginPath();\n    ctx.moveTo(this.previousPenLocation.x, this.previousPenLocation.y);\n    ctx.lineTo(clientX, adjustedY);\n    ctx.closePath();\n    ctx.lineWidth = PEN_STROKE_WIDTH;\n    ctx.strokeStyle = this.state.isTopCardRevealed ? PEN_CORRECTION_COLOR : PEN_GUESS_COLOR;\n    ctx.stroke();\n    this.previousPenLocation = {\n      x: clientX,\n      y: adjustedY,\n    };\n  }\n\n  onPenEnd() {\n    this.previousPenLocation = null;\n  }\n\n  simulateRightSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === 'Right') {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.min(1, completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateLeftSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === 'Left') {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.max(-1, -completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateUpSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === 'Up') {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.max(-1, -completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateDownSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === 'Down') {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.min(1, completionFactor),\n      });\n    };\n    render();\n  }\n}\n\nexport default CardsAgainstIlliteracy;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CardsAgainstIlliteracy from './CardsAgainstIlliteracy';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<CardsAgainstIlliteracy />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}