{"version":3,"sources":["images/settings.svg","components/Body.tsx","modifierNameToClassName.ts","components/Button.tsx","components/Header.tsx","components/SettingsButton.tsx","containers/DeckMenu.tsx","components/HomeButton.tsx","containers/DrillMenu.tsx","containers/PostDrillMenu.tsx","components/AffirmationSwipeIndicator.tsx","containers/ReadingDrill.tsx","components/Checkbox.tsx","components/Section.tsx","containers/SettingsMenu.tsx","containers/WritingDrill.tsx","decks/index.ts","decks/lesson1_1phrases.ts","decks/lesson1_2phrases.ts","decks/lesson1_2essentials.ts","decks/lesson1_3phrases.ts","decks/lesson1_3essentials.ts","decks/lesson1_4phrases.ts","decks/lesson1_4essentials.ts","decks/lesson1_5phrases.ts","decks/lesson1_5essentials.ts","decks/lesson1_6phrases.ts","decks/lesson1_6essentials.ts","decks/lesson2_1phrases.ts","decks/lesson2_1essentials.ts","decks/lesson2_2phrases.ts","decks/lesson2_2essentials.ts","decks/lesson2_3phrases.ts","decks/lesson2_3essentials.ts","decks/lesson2_4phrases.ts","decks/lesson3_1phrases.ts","decks/lesson3_2phrases.ts","decks/lesson3_3phrases.ts","decks/lesson3_4phrases.ts","decks/lesson3_5phrases.ts","decks/lesson4_1and4_2phrases.ts","decks/lesson4_3phrases.ts","decks/lesson4_4and4_5phrases.ts","decks/lesson4_6and4_7phrases.ts","decks/sample.ts","randomlySort.ts","CardsAgainstIlliteracy.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Body","children","className","modifierNameToClassName","baseClass","modifierName","modifierClasses","split","map","modifier","join","Button","onClick","Header","background","SettingsButton","src","settingsIcon","alt","DeckMenu","decks","onSettings","onSelect","deck","key","name","HomeButton","color","DrillMenu","deckName","onDrillSelect","onHome","PostDrillMenu","onRestart","AffirmationSwipeIndicator","selectedSwipeDirection","normalizedDelta","style","width","left","height","top","ReadingDrill","props","remainingCards","isTopCardRevealed","onReveal","onAffirmationSwipeStart","onAffirmationSwipeMove","onAffirmationSwipeEnd","onTouchStart","onTouchMove","onTouchEnd","getCardFrontClassName","characters","pinyin","meaning","card","length","Checkbox","checked","Section","header","DIRECTIONS","DECK_TYPES","SettingsMenu","displayedDeckTypes","areWritingCorrectionsEnabled","onSelectSwipeDirection","onToggleDeckTypeDisplay","onToggleWritingCorrections","direction","deckType","WritingDrill","this","canvasRef","onPenStart","onPenMove","onPenEnd","onMouseDown","NOOP","onMouseMove","onMouseUp","window","innerWidth","innerHeight","ref","current","addEventListener","e","preventDefault","passive","React","Component","productionDecks","cards","isProduction","randomlySort","arr","clone","slice","i","sort","halfPositiveHalfNegative","Math","random","HORIZONTAL_SWIPE_SIZE","VERTICAL_SWIPE_SIZE","SUPPORTS_TOUCH","CardsAgainstIlliteracy","previousPenLocation","state","type","localStorage","JSON","parse","Phrases","Essentials","undefined","cardsToRepractice","startingTouch","bindMethods","createRef","bind","onDeckSelect","onCardReveal","onKeyUp","onCardCorrect","onCardIncorrect","onDrillRestart","removeEventListener","getDisplayedDecks","includes","setState","stringify","Object","keys","filter","some","drill","changedTouches","touch","id","identifier","x","clientX","y","clientY","event","newTouch","Array","from","find","t","deltaX","max","min","deltaY","simulateRightSwipe","simulateLeftSwipe","simulateUpSwipe","simulateDownSwipe","getContext","clearRect","prevState","concat","d","offsetY","adjustedY","ctx","fillStyle","fillRect","beginPath","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","start","Date","now","render","completionFactor","requestAnimationFrame","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.53252be9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.5f70f755.svg\";","import React from \"react\";\nimport \"../styles/Body.css\";\n\nexport interface Props {\n  children: React.ReactChild | React.ReactChild[];\n}\n\nexport default function Body({ children }: Props): React.ReactElement {\n  return <div className=\"Body\">{children}</div>;\n}\n","export default function modifierNameToClassName(\n  baseClass: string,\n  modifierName: string\n): string {\n  const modifiers = modifierName === \"\" ? [] : modifierName.split(\" \");\n  const modifierClasses = modifiers.map(\n    (modifier) => baseClass + \"--\" + modifier\n  );\n  return baseClass + [\"\", ...modifierClasses].join(\" \");\n}\n","import React from \"react\";\nimport modifierNameToClassName from \"../modifierNameToClassName\";\nimport \"../styles/Button.css\";\n\nexport interface Props {\n  modifierName?: string;\n  onClick(): void;\n  children: React.ReactChild | React.ReactChild[];\n}\n\nexport default function Button({\n  modifierName = \"\",\n  onClick,\n  children,\n}: Props): React.ReactElement {\n  return (\n    <div\n      className={modifierNameToClassName(\"Button\", modifierName)}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/Header.css\";\n\nexport interface Props {\n  children: React.ReactChild | React.ReactChild[];\n  background: string;\n}\n\nexport default function Header({\n  children,\n  background,\n}: Props): React.ReactElement {\n  return <div className={\"Header Header--\" + background}>{children}</div>;\n}\n","import React from \"react\";\nimport settingsIcon from \"../images/settings.svg\";\nimport \"../styles/SettingsButton.css\";\n\nexport interface Props {\n  onClick(): void;\n}\n\nexport default function SettingsButton({ onClick }: Props): React.ReactElement {\n  return (\n    <img\n      src={settingsIcon}\n      alt=\"Settings button\"\n      className=\"SettingsButton\"\n      onClick={onClick}\n    />\n  );\n}\n","import React from \"react\";\nimport Body from \"../components/Body\";\nimport Button from \"../components/Button\";\nimport Header from \"../components/Header\";\nimport SettingsButton from \"../components/SettingsButton\";\nimport { Deck } from \"../types\";\n\nexport interface Props {\n  decks: Deck[];\n\n  onSettings(): void;\n  onSelect(deck: Deck): void;\n}\n\nexport default function DeckMenu({\n  decks,\n\n  onSettings,\n  onSelect,\n}: Props): React.ReactElement {\n  return (\n    <>\n      <Header background=\"white\">Lessons</Header>\n      <SettingsButton onClick={onSettings} />\n      <Body>\n        {decks.map((deck) => (\n          <Button\n            modifierName=\"blue shadow\"\n            onClick={() => onSelect(deck)}\n            key={deck.name}\n          >\n            {deck.name}\n          </Button>\n        ))}\n      </Body>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"../styles/HomeButton.css\";\n\nexport interface Props {\n  color: string;\n  onClick(): void;\n}\n\nexport default function HomeButton({\n  color,\n  onClick,\n}: Props): React.ReactElement {\n  return (\n    <button className={\"HomeButton HomeButton--\" + color} onClick={onClick}>\n      x\n    </button>\n  );\n}\n","import React from \"react\";\nimport Button from \"../components/Button\";\nimport Header from \"../components/Header\";\nimport HomeButton from \"../components/HomeButton\";\nimport { DrillType } from \"../types\";\n\nexport interface Props {\n  deckName: string;\n  onDrillSelect(drill: DrillType): void;\n  onHome(): void;\n}\n\nexport default function DrillMenu({\n  deckName,\n  onDrillSelect,\n  onHome,\n}: Props): React.ReactElement {\n  return (\n    <>\n      <Header background=\"white\">{deckName}</Header>\n      <HomeButton color=\"white\" onClick={onHome} />\n      <Button\n        modifierName=\"blue shadow\"\n        onClick={() => onDrillSelect(\"READING_DRILL\")}\n      >\n        Reading Drill\n      </Button>\n      <Button\n        modifierName=\"blue shadow\"\n        onClick={() => onDrillSelect(\"WRITING_DRILL\")}\n      >\n        Writing Drill\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport Button from \"../components/Button\";\nimport Header from \"../components/Header\";\n\nexport interface Props {\n  deckName: string;\n  onRestart(): void;\n  onHome(): void;\n}\n\nexport default function PostDrillMenu({\n  deckName,\n  onRestart,\n  onHome,\n}: Props): React.ReactElement {\n  return (\n    <>\n      <Header background=\"white\">{deckName}</Header>\n      <Button modifierName=\"blue shadow\" onClick={onRestart}>\n        Restart\n      </Button>\n      <Button modifierName=\"blue shadow\" onClick={onHome}>\n        Home\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"../styles/AffirmationSwipeIndicator.css\";\nimport { SwipeDirectionType } from \"../types\";\n\nexport interface Props {\n  selectedSwipeDirection: SwipeDirectionType;\n  normalizedDelta: number;\n}\n\nexport default function AffirmationSwipeIndicator({\n  selectedSwipeDirection,\n  normalizedDelta,\n}: Props): React.ReactElement {\n  switch (selectedSwipeDirection) {\n    case \"Right\":\n      return normalizedDelta > 0 ? (\n        <div\n          className=\"AffirmationSwipeIndicator--horizontal--correct\"\n          style={{\n            width: normalizedDelta * 100 + \"vw\",\n          }}\n        />\n      ) : (\n        <div\n          className=\"AffirmationSwipeIndicator--horizontal--incorrect\"\n          style={{\n            left: (1 + normalizedDelta) * 100 + \"vw\",\n            width: -normalizedDelta * 100 + \"vw\",\n          }}\n        />\n      );\n    case \"Left\":\n      return normalizedDelta > 0 ? (\n        <div\n          className=\"AffirmationSwipeIndicator--horizontal--incorrect\"\n          style={{\n            width: normalizedDelta * 100 + \"vw\",\n          }}\n        />\n      ) : (\n        <div\n          className=\"AffirmationSwipeIndicator--horizontal--correct\"\n          style={{\n            left: (1 + normalizedDelta) * 100 + \"vw\",\n            width: -normalizedDelta * 100 + \"vw\",\n          }}\n        />\n      );\n    case \"Up\":\n      return normalizedDelta > 0 ? (\n        <div\n          className=\"AffirmationSwipeIndicator--vertical--incorrect\"\n          style={{\n            height: normalizedDelta * 89 + \"vh\",\n          }}\n        />\n      ) : (\n        <div\n          className=\"AffirmationSwipeIndicator--vertical--correct\"\n          style={{\n            top: 11 + (1 + normalizedDelta) * 89 + \"vh\",\n            height: -normalizedDelta * 89 + \"vh\",\n          }}\n        />\n      );\n    case \"Down\":\n      return normalizedDelta > 0 ? (\n        <div\n          className=\"AffirmationSwipeIndicator--vertical--correct\"\n          style={{\n            height: normalizedDelta * 89 + \"vh\",\n          }}\n        />\n      ) : (\n        <div\n          className=\"AffirmationSwipeIndicator--vertical--incorrect\"\n          style={{\n            top: 11 + (1 + normalizedDelta) * 89 + \"vh\",\n            height: -normalizedDelta * 89 + \"vh\",\n          }}\n        />\n      );\n  }\n}\n","import React from \"react\";\nimport AffirmationSwipeIndicator from \"../components/AffirmationSwipeIndicator\";\nimport Header from \"../components/Header\";\nimport HomeButton from \"../components/HomeButton\";\nimport \"../styles/ReadingDrill.css\";\nimport { Card, SwipeDirectionType } from \"../types\";\n\nexport interface Props {\n  deckName: string;\n  remainingCards: Card[];\n  isTopCardRevealed: boolean;\n  selectedSwipeDirection: SwipeDirectionType;\n  normalizedDelta: number;\n\n  onHome(): void;\n  onReveal(): void;\n  onAffirmationSwipeStart(event: React.TouchEvent): void;\n  onAffirmationSwipeMove(event: React.TouchEvent): void;\n  onAffirmationSwipeEnd(event: React.TouchEvent): void;\n}\n\nexport default function ReadingDrill(props: Props): React.ReactElement {\n  const {\n    deckName,\n    remainingCards,\n    isTopCardRevealed,\n    selectedSwipeDirection,\n    normalizedDelta,\n\n    onHome,\n    onReveal,\n    onAffirmationSwipeStart,\n    onAffirmationSwipeMove,\n    onAffirmationSwipeEnd,\n  } = props;\n\n  if (!isTopCardRevealed) {\n    return (\n      <>\n        <Header background=\"blue\">{deckName}</Header>\n        <HomeButton color=\"blue\" onClick={onHome} />\n\n        <div className=\"ReadingDrill__CharacterContainer\" onClick={onReveal}>\n          <div className={getCardFrontClassName(remainingCards[0])}>\n            {remainingCards[0].characters}\n          </div>\n        </div>\n\n        <div className=\"ReadingDrill__PinyinContainer\" onClick={onReveal} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Header background=\"blue\">{deckName}</Header>\n      <HomeButton color=\"blue\" onClick={onHome} />\n\n      <div\n        className=\"ReadingDrill__CharacterContainer\"\n        onTouchStart={onAffirmationSwipeStart}\n        onTouchMove={onAffirmationSwipeMove}\n        onTouchEnd={onAffirmationSwipeEnd}\n      >\n        <div className={getCardFrontClassName(remainingCards[0])}>\n          {remainingCards[0].characters}\n        </div>\n      </div>\n\n      <div\n        className=\"ReadingDrill__PinyinContainer\"\n        onTouchStart={onAffirmationSwipeStart}\n        onTouchMove={onAffirmationSwipeMove}\n        onTouchEnd={onAffirmationSwipeEnd}\n      >\n        <div className=\"ReadingDrill__Pinyin\">\n          <div>{remainingCards[0].pinyin}</div>\n          <div>({remainingCards[0].meaning})</div>\n        </div>\n      </div>\n\n      <AffirmationSwipeIndicator\n        selectedSwipeDirection={selectedSwipeDirection}\n        normalizedDelta={normalizedDelta}\n      />\n    </>\n  );\n}\n\nfunction getCardFrontClassName(card: Card): string {\n  return (\n    \"ReadingDrill__Character\" +\n    (card.characters.length > 4 ? \" ReadingDrill__Character--small\" : \"\")\n  );\n}\n","import React from \"react\";\nimport \"../styles/Checkbox.css\";\n\nexport interface Props {\n  children: React.ReactChild | React.ReactChild[];\n  checked: boolean;\n  onClick(event: React.MouseEvent): void;\n}\n\nexport default function Checkbox({\n  children,\n  checked,\n  onClick,\n}: Props): React.ReactElement {\n  return (\n    <div\n      className={\"Checkbox\" + (checked ? \" Checkbox--checked\" : \"\")}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/Section.css\";\n\nexport interface Props {\n  header: React.ReactChild;\n  children: React.ReactChild | React.ReactChild[];\n}\n\nexport default function Section({\n  header,\n  children,\n}: Props): React.ReactElement {\n  return (\n    <div className=\"Section\">\n      <div className=\"Section__Header\">{header}</div>\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Body from \"../components/Body\";\nimport Checkbox from \"../components/Checkbox\";\nimport Header from \"../components/Header\";\nimport HomeButton from \"../components/HomeButton\";\nimport Section from \"../components/Section\";\nimport { DeckType, DisplayedDeckTypes, SwipeDirectionType } from \"../types\";\n\nexport interface Props {\n  selectedSwipeDirection: SwipeDirectionType;\n  displayedDeckTypes: DisplayedDeckTypes;\n  areWritingCorrectionsEnabled: boolean;\n\n  onHome(): void;\n  onSelectSwipeDirection(direction: SwipeDirectionType): void;\n  onToggleDeckTypeDisplay(deckType: DeckType): void;\n  onToggleWritingCorrections(): void;\n}\n\nconst DIRECTIONS: SwipeDirectionType[] = [\"Right\", \"Left\", \"Up\", \"Down\"];\nconst DECK_TYPES: DeckType[] = [\"Phrases\", \"Essentials\"];\n\nexport default function SettingsMenu({\n  selectedSwipeDirection,\n  displayedDeckTypes,\n  areWritingCorrectionsEnabled,\n\n  onHome,\n  onSelectSwipeDirection,\n  onToggleDeckTypeDisplay,\n  onToggleWritingCorrections,\n}: Props): React.ReactElement {\n  return (\n    <>\n      <Header background=\"blue\">Settings</Header>\n      <HomeButton color=\"blue\" onClick={onHome} />\n      <Body>\n        <Section header=\"Correct Answer Swipe Direction\">\n          {DIRECTIONS.map((direction) => (\n            <Checkbox\n              checked={direction === selectedSwipeDirection}\n              onClick={() => onSelectSwipeDirection(direction)}\n              key={direction}\n            >\n              {direction}\n            </Checkbox>\n          ))}\n        </Section>\n        <Section header=\"Decks to Display\">\n          {DECK_TYPES.map((deckType) => (\n            <Checkbox\n              checked={displayedDeckTypes[deckType]}\n              onClick={() => onToggleDeckTypeDisplay(deckType)}\n              key={deckType}\n            >\n              {deckType}\n            </Checkbox>\n          ))}\n        </Section>\n        <Section header=\"Writing Corrections\">\n          <Checkbox\n            checked={areWritingCorrectionsEnabled}\n            onClick={onToggleWritingCorrections}\n          >\n            Enabled?\n          </Checkbox>\n        </Section>\n      </Body>\n    </>\n  );\n}\n","import React from \"react\";\nimport AffirmationSwipeIndicator from \"../components/AffirmationSwipeIndicator\";\nimport Header from \"../components/Header\";\nimport HomeButton from \"../components/HomeButton\";\nimport \"../styles/WritingDrill.css\";\nimport {\n  Card,\n  PointerDownEvent,\n  PointerMoveEvent,\n  PointerUpEvent,\n  SwipeDirectionType,\n} from \"../types\";\n\nexport interface Props {\n  deckName: string;\n  remainingCards: Card[];\n  isTopCardRevealed: boolean;\n  selectedSwipeDirection: SwipeDirectionType;\n  normalizedDelta: number;\n  areWritingCorrectionsEnabled: boolean;\n\n  onHome(): void;\n  onPenStart(event: PointerDownEvent): void;\n  onPenMove(event: PointerMoveEvent): void;\n  onPenEnd(event: PointerUpEvent): void;\n  onReveal(): void;\n  onAffirmationSwipeStart(event: React.TouchEvent): void;\n  onAffirmationSwipeMove(event: React.TouchEvent): void;\n  onAffirmationSwipeEnd(event: React.TouchEvent): void;\n\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n}\n\nexport interface State {}\n\nexport default class WritingDrill extends React.Component<Props, State> {\n  render() {\n    const {\n      deckName,\n      remainingCards,\n      isTopCardRevealed,\n      selectedSwipeDirection,\n      normalizedDelta,\n      areWritingCorrectionsEnabled,\n\n      onHome,\n      onReveal,\n      onAffirmationSwipeStart,\n      onAffirmationSwipeMove,\n      onAffirmationSwipeEnd,\n\n      canvasRef,\n    } = this.props;\n\n    const onPenStart = this.props.onPenStart as (\n      event: React.TouchEvent | React.MouseEvent\n    ) => void;\n    const onPenMove = this.props.onPenMove as (\n      event: React.TouchEvent | React.MouseEvent\n    ) => void;\n    const onPenEnd = this.props.onPenEnd as (\n      event: React.TouchEvent | React.MouseEvent\n    ) => void;\n\n    if (isTopCardRevealed) {\n      return (\n        <>\n          <Header background=\"blue\">{deckName}</Header>\n          <HomeButton color=\"blue\" onClick={onHome} />\n          <canvas\n            onTouchStart={\n              areWritingCorrectionsEnabled\n                ? onPenStart\n                : onAffirmationSwipeStart\n            }\n            onTouchMove={\n              areWritingCorrectionsEnabled ? onPenMove : onAffirmationSwipeMove\n            }\n            onTouchEnd={\n              areWritingCorrectionsEnabled ? onPenEnd : onAffirmationSwipeEnd\n            }\n            onMouseDown={areWritingCorrectionsEnabled ? onPenStart : NOOP}\n            onMouseMove={areWritingCorrectionsEnabled ? onPenMove : NOOP}\n            onMouseUp={areWritingCorrectionsEnabled ? onPenEnd : NOOP}\n            width={window.innerWidth}\n            height={window.innerHeight * 0.62}\n            ref={canvasRef}\n          />\n          <div\n            className=\"WritingDrill__CharacterContainer\"\n            onTouchStart={onAffirmationSwipeStart}\n            onTouchMove={onAffirmationSwipeMove}\n            onTouchEnd={onAffirmationSwipeEnd}\n          >\n            <div className=\"WritingDrill__Characters\">\n              {remainingCards[0].characters}\n            </div>\n          </div>\n          <AffirmationSwipeIndicator\n            selectedSwipeDirection={selectedSwipeDirection}\n            normalizedDelta={normalizedDelta}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <Header background=\"blue\">{deckName}</Header>\n        <HomeButton color=\"blue\" onClick={onHome} />\n        <canvas\n          onTouchStart={onPenStart}\n          onTouchMove={onPenMove}\n          onMouseDown={onPenStart}\n          onMouseMove={onPenMove}\n          onMouseUp={onPenEnd}\n          width={window.innerWidth}\n          height={window.innerHeight * 0.62}\n          ref={canvasRef}\n        />\n        <div className=\"WritingDrill__Pinyin\" onClick={onReveal}>\n          {remainingCards[0].pinyin}\n        </div>\n      </>\n    );\n  }\n\n  componentDidMount() {\n    this.props.canvasRef.current!.addEventListener(\n      \"touchmove\",\n      (e) => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n  }\n}\n\nconst NOOP = () => {};\n","import sample from \"./sample\";\nimport lesson1_1phrases from \"./lesson1_1phrases\";\nimport lesson1_2phrases from \"./lesson1_2phrases\";\nimport lesson1_2essentials from \"./lesson1_2essentials\";\nimport lesson1_3phrases from \"./lesson1_3phrases\";\nimport lesson1_3essentials from \"./lesson1_3essentials\";\nimport lesson1_4phrases from \"./lesson1_4phrases\";\nimport lesson1_4essentials from \"./lesson1_4essentials\";\nimport lesson1_5phrases from \"./lesson1_5phrases\";\nimport lesson1_5essentials from \"./lesson1_5essentials\";\nimport lesson1_6phrases from \"./lesson1_6phrases\";\nimport lesson1_6essentials from \"./lesson1_6essentials\";\nimport lesson2_1phrases from \"./lesson2_1phrases\";\nimport lesson2_1essentials from \"./lesson2_1essentials\";\nimport lesson2_2phrases from \"./lesson2_2phrases\";\nimport lesson2_2essentials from \"./lesson2_2essentials\";\nimport lesson2_3phrases from \"./lesson2_3phrases\";\nimport lesson2_3essentials from \"./lesson2_3essentials\";\nimport lesson2_4phrases from \"./lesson2_4phrases\";\nimport lesson3_1phrases from \"./lesson3_1phrases\";\nimport lesson3_2phrases from \"./lesson3_2phrases\";\nimport lesson3_3phrases from \"./lesson3_3phrases\";\nimport lesson3_4phrases from \"./lesson3_4phrases\";\nimport lesson3_5phrases from \"./lesson3_5phrases\";\nimport lesson4_1and4_2phrases from \"./lesson4_1and4_2phrases\";\nimport lesson4_3phrases from \"./lesson4_3phrases\";\nimport lesson4_4and4_5phrases from \"./lesson4_4and4_5phrases\";\nimport lesson4_6and4_7phrases from \"./lesson4_6and4_7phrases\";\nimport { Deck } from \"../types\";\n\nconst productionDecks: Deck[] = [\n  lesson1_1phrases,\n  lesson1_2phrases,\n  lesson1_2essentials,\n  lesson1_3phrases,\n  lesson1_3essentials,\n  lesson1_4phrases,\n  lesson1_4essentials,\n  lesson1_5phrases,\n  lesson1_5essentials,\n  lesson1_6phrases,\n  lesson1_6essentials,\n  lesson2_1phrases,\n  lesson2_1essentials,\n  lesson2_2phrases,\n  lesson2_2essentials,\n  lesson2_3phrases,\n  lesson2_3essentials,\n  lesson2_4phrases,\n  lesson3_1phrases,\n  lesson3_2phrases,\n  lesson3_3phrases,\n  lesson3_4phrases,\n  lesson3_5phrases,\n  lesson4_1and4_2phrases,\n  lesson4_3phrases,\n  lesson4_4and4_5phrases,\n  lesson4_6and4_7phrases\n];\n\nconst devDecks = [sample, ...productionDecks] as const;\n\nconst isProduction = !(\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n);\n\nexport default (isProduction ? productionDecks : devDecks);\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.1 Phrases\",\n  cards: [\n    {\n      characters: \"喜欢\",\n      pinyin: \"xǐhuān\",\n      meaning: \"like\"\n    },\n    {\n      characters: \"介绍\",\n      pinyin: \"jièshào\",\n      meaning: \"introduction\"\n    },\n    {\n      characters: \"一下儿\",\n      pinyin: \"yīxiàr\",\n      meaning: \"for a short while\"\n    },\n    {\n      characters: \"唱歌\",\n      pinyin: \"chànggē\",\n      meaning: \"sing\"\n    },\n    {\n      characters: \"听音乐\",\n      pinyin: \"tīn yīnyuè\",\n      meaning: \"listen to music\"\n    },\n    {\n      characters: \"音乐迷\",\n      pinyin: \"yīnyuè mí\",\n      meaning: \"music fan\"\n    },\n    {\n      characters: \"画画儿\",\n      pinyin: \"huà huàr\",\n      meaning: \"paint\"\n    },\n    {\n      characters: \"养动物\",\n      pinyin: \"yǎng dòngwù\",\n      meaning: \"keep a pet\"\n    },\n    {\n      characters: \"非常\",\n      pinyin: \"fēicháng\",\n      meaning: \"really\"\n    },\n    {\n      characters: \"可爱\",\n      pinyin: \"kěài\",\n      meaning: \"lovely\"\n    },\n    {\n      characters: \"看电影\",\n      pinyin: \"kàn diànyǐng\",\n      meaning: \"watch a movie\"\n    },\n    {\n      characters: \"看电视\",\n      pinyin: \"kàn diànshì\",\n      meaning: \"watch TV\"\n    },\n    {\n      characters: \"跳舞\",\n      pinyin: \"tiàowǔ\",\n      meaning: \"dance\"\n    },\n    {\n      characters: \"出门\",\n      pinyin: \"chūmén\",\n      meaning: \"go out\"\n    },\n    {\n      characters: \"找朋友\",\n      pinyin: \"zhǎo péngyǒu\",\n      meaning: \"find friends\"\n    },\n    {\n      characters: \"爱玩儿\",\n      pinyin: \"ài wánr\",\n      meaning: \"love to play\"\n    },\n    {\n      characters: \"最...了\",\n      pinyin: \"zuì...le\",\n      meaning: \"most\"\n    },\n    {\n      characters: \"杂志\",\n      pinyin: \"zázhì\",\n      meaning: \"magazine\"\n    },\n    {\n      characters: \"可以\",\n      pinyin: \"kěyǐ\",\n      meaning: \"can, may\"\n    },\n    {\n      characters: \"借\",\n      pinyin: \"jiè\",\n      meaning: \"borrow\"\n    },\n    {\n      characters: \"还给\",\n      pinyin: \"huán gěi\",\n      meaning: \"return\"\n    },\n    {\n      characters: \"哪期的\",\n      pinyin: \"nǎ qí de\",\n      meaning: \"which issue\"\n    },\n    {\n      characters: \"有意思\",\n      pinyin: \"yǒuyìsi\",\n      meaning: \"interesting\"\n    },\n    {\n      characters: \"还是\",\n      pinyin: \"háishì\",\n      meaning: \"or\"\n    },\n    {\n      characters: \"都\",\n      pinyin: \"dōu\",\n      meaning: \"all\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.2 Phrases\",\n  cards: [\n    {\n      characters: \"星期\",\n      pinyin: \"xīngqí\",\n      meaning: \"week\"\n    },\n    {\n      characters: \"星期一\",\n      pinyin: \"xīngqí yī\",\n      meaning: \"Monday\"\n    },\n    {\n      characters: \"下午\",\n      pinyin: \"xiàwǔ\",\n      meaning: \"afternoon\"\n    },\n    {\n      characters: \"有空儿\",\n      pinyin: \"yǒu kòng\",\n      meaning: \"free\"\n    },\n    {\n      characters: \"没空儿\",\n      pinyin: \"méi kòng\",\n      meaning: \"busy\"\n    },\n    {\n      characters: \"有事儿\",\n      pinyin: \"yǒu shìr\",\n      meaning: \"busy\"\n    },\n    {\n      characters: \"没事儿\",\n      pinyin: \"méi shìr\",\n      meaning: \"free\"\n    },\n    {\n      characters: \"想\",\n      pinyin: \"xiǎng\",\n      meaning: \"think, want to\"\n    },\n    {\n      characters: \"电影\",\n      pinyin: \"diànyǐng\",\n      meaning: \"movie\"\n    },\n    {\n      characters: \"行\",\n      pinyin: \"xíng\",\n      meaning: \"okay\"\n    },\n    {\n      characters: \"听说\",\n      pinyin: \"tīng shuō\",\n      meaning: \"it is said that\"\n    },\n    {\n      characters: \"不错\",\n      pinyin: \"bùcuò\",\n      meaning: \"good\"\n    },\n    {\n      characters: \"咱们\",\n      pinyin: \"zánmen\",\n      meaning: \"all of us\"\n    },\n    {\n      characters: \"就\",\n      pinyin: \"jiù\",\n      meaning: \"just\"\n    },\n    {\n      characters: \"来\",\n      pinyin: \"lái\",\n      meaning: \"come\"\n    },\n    {\n      characters: \"去\",\n      pinyin: \"qù\",\n      meaning: \"go\"\n    },\n    {\n      characters: \"坐公共汽车\",\n      pinyin: \"zuò gōnggòng qìchē\",\n      meaning: \"take a bus\"\n    },\n    {\n      characters: \"把\",\n      pinyin: \"bǎ\",\n      meaning: \"suggestion particle\"\n    },\n    {\n      characters: \"太好了\",\n      pinyin: \"tài hǎole\",\n      meaning: \"great\"\n    },\n    {\n      characters: \"怎么样\",\n      pinyin: \"zěnme yàng\",\n      meaning: \"how is it\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.2 Essentials\",\n  cards: [\n    {\n      characters: \"星期一\",\n      pinyin: \"xīngqí yī\",\n      meaning: \"Monday\"\n    },\n    {\n      characters: \"下午\",\n      pinyin: \"xiàwǔ\",\n      meaning: \"afternoon\"\n    },\n    {\n      characters: \"有空儿\",\n      pinyin: \"yǒu kòng\",\n      meaning: \"free\"\n    },\n    {\n      characters: \"有事儿\",\n      pinyin: \"yǒu shìr\",\n      meaning: \"busy\"\n    },\n    {\n      characters: \"想\",\n      pinyin: \"xiǎng\",\n      meaning: \"think, want to\"\n    },\n    {\n      characters: \"行\",\n      pinyin: \"xíng\",\n      meaning: \"okay\"\n    },\n    {\n      characters: \"听说\",\n      pinyin: \"tīng shuō\",\n      meaning: \"it is said that\"\n    },\n    {\n      characters: \"不错\",\n      pinyin: \"bùcuò\",\n      meaning: \"good\"\n    },\n    {\n      characters: \"咱们\",\n      pinyin: \"zánmen\",\n      meaning: \"all of us\"\n    },\n    {\n      characters: \"就\",\n      pinyin: \"jiù\",\n      meaning: \"just\"\n    },\n    {\n      characters: \"来\",\n      pinyin: \"lái\",\n      meaning: \"come\"\n    },\n    {\n      characters: \"去\",\n      pinyin: \"qù\",\n      meaning: \"go\"\n    },\n    {\n      characters: \"坐公共汽车\",\n      pinyin: \"zuò gōnggòng qìchē\",\n      meaning: \"take a bus\"\n    },\n    {\n      characters: \"把\",\n      pinyin: \"bǎ\",\n      meaning: \"suggestion particle\"\n    },\n    {\n      characters: \"太好了\",\n      pinyin: \"tài hǎole\",\n      meaning: \"great\"\n    },\n    {\n      characters: \"怎么样\",\n      pinyin: \"zěnme yàng\",\n      meaning: \"how is it\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.3 Phrases\",\n  cards: [\n    {\n      characters: \"球拍\",\n      meaning: \"racket\",\n      pinyin: \"qiúpāi\"\n    },\n    {\n      characters: \"带\",\n      meaning: \"bring\",\n      pinyin: \"dài\"\n    },\n    {\n      characters: \"拿\",\n      meaning: \"take\",\n      pinyin: \"ná\"\n    },\n    {\n      characters: \"乒乓球\",\n      meaning: \"pingpong\",\n      pinyin: \"pīngpāngqiú\"\n    },\n    {\n      characters: \"去\",\n      meaning: \"go with\",\n      pinyin: \"qù\"\n    },\n    {\n      characters: \"跟他借\",\n      meaning: \"borrow from him\",\n      pinyin: \"gēn tā jiè\"\n    },\n    {\n      characters: \"用一下儿\",\n      meaning: \"use\",\n      pinyin: \"yòng yīxià ér\"\n    },\n    {\n      characters: \"杂心\",\n      meaning: \"magazine\",\n      pinyin: \"zá xīn\"\n    },\n    {\n      characters: \"对不起\",\n      meaning: \"sorry\",\n      pinyin: \"duìbùqǐ\"\n    },\n    {\n      characters: \"行吗\",\n      meaning: \"okay\",\n      pinyin: \"háng má\"\n    },\n    {\n      characters: \"还给\",\n      meaning: \"give back\",\n      pinyin: \"huángěi\"\n    },\n    {\n      characters: \"明天\",\n      meaning: \"tomorrow\",\n      pinyin: \"míngtiān\"\n    },\n    {\n      characters: \"几个\",\n      meaning: \"how many\",\n      pinyin: \"jǐgè\"\n    },\n    {\n      characters: \"想去\",\n      meaning: \"want to go\",\n      pinyin: \"xiǎng qù\"\n    },\n    {\n      characters: \"借我用\",\n      meaning: \"lend to me to use\",\n      pinyin: \"jiè wǒ yòng\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.3 Essentials\",\n  cards: [\n    {\n      characters: \"球拍\",\n      pinyin: \"qiúpāi\",\n      meaning: \"racket\"\n    },\n    {\n      characters: \"带\",\n      pinyin: \"dài\",\n      meaning: \"bring\"\n    },\n    {\n      characters: \"拿\",\n      pinyin: \"ná\",\n      meaning: \"take\"\n    },\n    {\n      characters: \"乒乓球\",\n      pinyin: \"pīngpāng qiú\",\n      meaning: \"pingpong\"\n    },\n    {\n      characters: \"跟\",\n      pinyin: \"gēn\",\n      meaning: \"with\"\n    },\n    {\n      characters: \"用\",\n      pinyin: \"yòng\",\n      meaning: \"to use\"\n    },\n    {\n      characters: \"对不起\",\n      pinyin: \"duìbùqǐ\",\n      meaning: \"sorry\"\n    },\n    {\n      characters: \"明天\",\n      pinyin: \"míngtiān\",\n      meaning: \"tomorrow\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.4 Phrases\",\n  cards: [\n    {\n      characters: \"会\",\n      meaning: \"can\",\n      pinyin: \"huì\"\n    },\n    {\n      characters: \"很会\",\n      meaning: \"is good at\",\n      pinyin: \"hěn huì\"\n    },\n    {\n      characters: \"干什么\",\n      meaning: \"do what\",\n      pinyin: \"gànshénme\"\n    },\n    {\n      characters: \"没关系\",\n      meaning: \"it's ok\",\n      pinyin: \"méiguānxì\"\n    },\n    {\n      characters: \"我教你\",\n      meaning: \"I teach you\",\n      pinyin: \"wǒ jiāo nǐ\"\n    },\n    {\n      characters: \"得\",\n      meaning: \"must\",\n      pinyin: \"dé\"\n    },\n    {\n      characters: \"现在\",\n      meaning: \"now\",\n      pinyin: \"xiànzài\"\n    },\n    {\n      characters: \"能\",\n      meaning: \"can\",\n      pinyin: \"néng\"\n    },\n    {\n      characters: \"跟你去\",\n      meaning: \"go with you\",\n      pinyin: \"gēn nǐ qù\"\n    },\n    {\n      characters: \"找老师\",\n      meaning: \"look for a teacher\",\n      pinyin: \"zhǎo lǎoshī\"\n    },\n    {\n      characters: \"帮...的忙\",\n      meaning: \"help\",\n      pinyin: \"bāng ... de máng  \"\n    },\n    {\n      characters: \"程序\",\n      meaning: \"program\",\n      pinyin: \"chéngxù\"\n    },\n    {\n      characters: \"怎么啦\",\n      meaning: \"what's wrong\",\n      pinyin: \"zěnme lā\"\n    },\n    {\n      characters: \"开始\",\n      meaning: \"start\",\n      pinyin: \"kāishǐ\"\n    },\n    {\n      characters: \"讲\",\n      meaning: \"speak\",\n      pinyin: \"jiǎng\"\n    },\n    {\n      characters: \"知道\",\n      meaning: \"know\",\n      pinyin: \"zhīdào\"\n    },\n    {\n      characters: \"先...然后...\",\n      meaning: \"first... then...\",\n      pinyin: \"xiān ... rán hòu ...   \"\n    },\n    {\n      characters: \"字母\",\n      meaning: \"letter\",\n      pinyin: \"zìmǔ\"\n    },\n    {\n      characters: \"按这个键\",\n      meaning: \"press this button\",\n      pinyin: \"àn zhègè jiàn\"\n    },\n    {\n      characters: \"容易\",\n      meaning: \"easy\",\n      pinyin: \"róngyì\"\n    },\n    {\n      characters: \"试一试\",\n      meaning: \"give it a try\",\n      pinyin: \"shìyīshì\"\n    },\n    {\n      characters: \"对了\",\n      meaning: \"correct\",\n      pinyin: \"duì liǎo\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.4 Essentials\",\n  cards: [\n    {\n      characters: \"很会\",\n      meaning: \"is good at\",\n      pinyin: \"hěn huì\"\n    },\n    {\n      characters: \"干什么\",\n      meaning: \"do what\",\n      pinyin: \"gànshénme\"\n    },\n    {\n      characters: \"没关系\",\n      meaning: \"it's ok\",\n      pinyin: \"méiguānxì\"\n    },\n    {\n      characters: \"教\",\n      meaning: \"teach\",\n      pinyin: \"jiāo\"\n    },\n    {\n      characters: \"得\",\n      meaning: \"must\",\n      pinyin: \"dé\"\n    },\n    {\n      characters: \"现在\",\n      meaning: \"now\",\n      pinyin: \"xiànzài\"\n    },\n    {\n      characters: \"能\",\n      meaning: \"can\",\n      pinyin: \"néng\"\n    },\n    {\n      characters: \"帮...的忙\",\n      meaning: \"help\",\n      pinyin: \"bāng ... de máng  \"\n    },\n    {\n      characters: \"程序\",\n      meaning: \"program\",\n      pinyin: \"chéngxù\"\n    },\n    {\n      characters: \"怎么啦\",\n      meaning: \"what's wrong\",\n      pinyin: \"zěnme lā\"\n    },\n    {\n      characters: \"开始\",\n      meaning: \"start\",\n      pinyin: \"kāishǐ\"\n    },\n    {\n      characters: \"讲\",\n      meaning: \"speak\",\n      pinyin: \"jiǎng\"\n    },\n    {\n      characters: \"知道\",\n      meaning: \"know\",\n      pinyin: \"zhīdào\"\n    },\n    {\n      characters: \"先...然后...\",\n      meaning: \"first... then...\",\n      pinyin: \"xiān ... rán hòu ...   \"\n    },\n    {\n      characters: \"字母\",\n      meaning: \"letter\",\n      pinyin: \"zìmǔ\"\n    },\n    {\n      characters: \"按这个键\",\n      meaning: \"press this button\",\n      pinyin: \"àn zhègè jiàn\"\n    },\n    {\n      characters: \"容易\",\n      meaning: \"easy\",\n      pinyin: \"róngyì\"\n    },\n    {\n      characters: \"试一试\",\n      meaning: \"give it a try\",\n      pinyin: \"shìyīshì\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.5 Phrases\",\n  cards: [\n    {\n      characters: \"介绍\",\n      meaning: \"introduction\",\n      pinyin: \"jièshào\"\n    },\n    {\n      characters: \"自己\",\n      meaning: \"self\",\n      pinyin: \"zìjǐ\"\n    },\n    {\n      characters: \"非常\",\n      meaning: \"very\",\n      pinyin: \"fēicháng\"\n    },\n    {\n      characters: \"得\",\n      meaning: \"adverb particle\",\n      pinyin: \"dé\"\n    },\n    {\n      characters: \"怎么样\",\n      meaning: \"how about it\",\n      pinyin: \"zěnmeyàng\"\n    },\n    {\n      characters: \"写字\",\n      meaning: \"write\",\n      pinyin: \"xiězì\"\n    },\n    {\n      characters: \"说中国话\",\n      meaning: \"speak Chinese\",\n      pinyin: \"shuō zhōngguó huà\"\n    },\n    {\n      characters: \"打字\",\n      meaning: \"type\",\n      pinyin: \"dǎzì\"\n    },\n    {\n      characters: \"唱歌\",\n      meaning: \"sing\",\n      pinyin: \"chànggē\"\n    },\n    {\n      characters: \"吃饭\",\n      meaning: \"eat\",\n      pinyin: \"chīfàn\"\n    },\n    {\n      characters: \"慢\",\n      meaning: \"slow\",\n      pinyin: \"màn\"\n    },\n    {\n      characters: \"快\",\n      meaning: \"fast\",\n      pinyin: \"kuài\"\n    },\n    {\n      characters: \"不太好\",\n      meaning: \"not very good\",\n      pinyin: \"bùtàihǎo\"\n    },\n    {\n      characters: \"流利\",\n      meaning: \"fluent\",\n      pinyin: \"liúlì\"\n    },\n    {\n      characters: \"更\",\n      meaning: \"more\",\n      pinyin: \"gèng\"\n    },\n    {\n      characters: \"体育运动\",\n      meaning: \"sports\",\n      pinyin: \"tǐyùyùndòng\"\n    },\n    {\n      characters: \"好听\",\n      meaning: \"pleasantly sounding\",\n      pinyin: \"hǎotīng\"\n    },\n    {\n      characters: \"好看\",\n      meaning: \"good looking\",\n      pinyin: \"hǎokàn\"\n    },\n    {\n      characters: \"好吃\",\n      meaning: \"good to eat\",\n      pinyin: \"hǎochī\"\n    },\n    {\n      characters: \"太乱了\",\n      meaning: \"too messy\",\n      pinyin: \"tài luàn le\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.5 Essentials\",\n  cards: [\n    {\n      characters: \"自己\",\n      meaning: \"self\",\n      pinyin: \"zìjǐ\"\n    },\n    {\n      characters: \"写字\",\n      meaning: \"write\",\n      pinyin: \"xiězì\"\n    },\n    {\n      characters: \"说中国话\",\n      meaning: \"speak Chinese\",\n      pinyin: \"shuō zhōngguó huà\"\n    },\n    {\n      characters: \"吃饭\",\n      meaning: \"eat\",\n      pinyin: \"chīfàn\"\n    },\n    {\n      characters: \"慢\",\n      meaning: \"slow\",\n      pinyin: \"màn\"\n    },\n    {\n      characters: \"快\",\n      meaning: \"fast\",\n      pinyin: \"kuài\"\n    },\n    {\n      characters: \"流利\",\n      meaning: \"fluent\",\n      pinyin: \"liúlì\"\n    },\n    {\n      characters: \"更\",\n      meaning: \"more\",\n      pinyin: \"gèng\"\n    },\n    {\n      characters: \"体育运动\",\n      meaning: \"sports\",\n      pinyin: \"tǐyùyùndòng\"\n    },\n    {\n      characters: \"太乱了\",\n      meaning: \"too messy\",\n      pinyin: \"tài luàn le\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.6 Phrases\",\n  cards: [\n    {\n      characters: \"电话\",\n      meaning: \"phone\",\n      pinyin: \"diànhuà\"\n    },\n    {\n      characters: \"打电话\",\n      meaning: \"call\",\n      pinyin: \"dǎdiànhuà\"\n    },\n    {\n      characters: \"给...打电话\",\n      meaning: \"call\",\n      pinyin: \"gěi ... dǎ diàn huà\"\n    },\n    {\n      characters: \"电话号码\",\n      meaning: \"phone number\",\n      pinyin: \"diànhuàhàomǎ\"\n    },\n    {\n      characters: \"接电话\",\n      meaning: \"answer a call\",\n      pinyin: \"jiēdiànhuà\"\n    },\n    {\n      characters: \"回电话\",\n      meaning: \"call back\",\n      pinyin: \"huí diànhuà\"\n    },\n    {\n      characters: \"说一遍\",\n      meaning: \"say it once\",\n      pinyin: \"shuō yībiàn\"\n    },\n    {\n      characters: \"再说一遍\",\n      meaning: \"say it again\",\n      pinyin: \"zàishuō yībiàn\"\n    },\n    {\n      characters: \"一会儿\",\n      meaning: \"for a short while\",\n      pinyin: \"yīhuìer\"\n    },\n    {\n      characters: \"回来\",\n      meaning: \"come back\",\n      pinyin: \"huílái\"\n    },\n    {\n      characters: \"刚才\",\n      meaning: \"just now\",\n      pinyin: \"gāngcái\"\n    },\n    {\n      characters: \"让\",\n      meaning: \"let\",\n      pinyin: \"ràng\"\n    },\n    {\n      characters: \"什么时候\",\n      meaning: \"when\",\n      pinyin: \"shénme shíhòu\"\n    },\n    {\n      characters: \"几点\",\n      meaning: \"what time\",\n      pinyin: \"jǐdiǎn\"\n    },\n    {\n      characters: \"一点半\",\n      meaning: \"1:30\",\n      pinyin: \"yīdiǎnbàn\"\n    },\n    {\n      characters: \"九点一刻\",\n      meaning: \"9:15\",\n      pinyin: \"jiǔdiǎn yīkè\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"1.6 Essentials\",\n  cards: [\n    {\n      characters: \"电话号码\",\n      meaning: \"phone number\",\n      pinyin: \"diànhuàhàomǎ\"\n    },\n    {\n      characters: \"接电话\",\n      meaning: \"answer a call\",\n      pinyin: \"jiēdiànhuà\"\n    },\n    {\n      characters: \"再说一遍\",\n      meaning: \"say it again\",\n      pinyin: \"zàishuō yībiàn\"\n    },\n    {\n      characters: \"回来\",\n      meaning: \"come back\",\n      pinyin: \"huílái\"\n    },\n    {\n      characters: \"刚才\",\n      meaning: \"just now\",\n      pinyin: \"gāngcái\"\n    },\n    {\n      characters: \"让\",\n      meaning: \"let\",\n      pinyin: \"ràng\"\n    },\n    {\n      characters: \"什么时候\",\n      meaning: \"when\",\n      pinyin: \"shénme shíhòu\"\n    },\n    {\n      characters: \"几点\",\n      meaning: \"what time\",\n      pinyin: \"jǐdiǎn\"\n    },\n    {\n      characters: \"半\",\n      meaning: \"half\",\n      pinyin: \"bàn\"\n    },\n    {\n      characters: \"刻\",\n      meaning: \"quarter\",\n      pinyin: \"kè\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.1 Phrases\",\n  cards: [\n    {\n      characters: \"穿\",\n      meaning: \"wear\",\n      pinyin: \"chuān\"\n    },\n    {\n      characters: \"戴\",\n      meaning: \"wear\",\n      pinyin: \"dài\"\n    },\n    {\n      characters: \"衣服\",\n      meaning: \"clothes\",\n      pinyin: \"yīfú\"\n    },\n    {\n      characters: \"衬衫\",\n      meaning: \"shirt\",\n      pinyin: \"chènshān\"\n    },\n    {\n      characters: \"汗衫\",\n      meaning: \"T-shirt\",\n      pinyin: \"hànshān\"\n    },\n    {\n      characters: \"长裤\",\n      meaning: \"pants\",\n      pinyin: \"cháng kù\"\n    },\n    {\n      characters: \"短裤\",\n      meaning: \"shorts\",\n      pinyin: \"duǎnkù\"\n    },\n    {\n      characters: \"裙子\",\n      meaning: \"skirt\",\n      pinyin: \"qúnzi\"\n    },\n    {\n      characters: \"外套\",\n      meaning: \"jacket\",\n      pinyin: \"wàitào\"\n    },\n    {\n      characters: \"运动服\",\n      meaning: \"sportswear\",\n      pinyin: \"yùndòng fú\"\n    },\n    {\n      characters: \"牛仔裤\",\n      meaning: \"jeans\",\n      pinyin: \"niúzǎikù\"\n    },\n    {\n      characters: \"球鞋\",\n      meaning: \"sneakers\",\n      pinyin: \"qiúxié\"\n    },\n    {\n      characters: \"袜子\",\n      meaning: \"sock\",\n      pinyin: \"wàzi\"\n    },\n    {\n      characters: \"帽子\",\n      meaning: \"hat\",\n      pinyin: \"màozi\"\n    },\n    {\n      characters: \"墨镜\",\n      meaning: \"sunglasses\",\n      pinyin: \"mòjìng\"\n    },\n    {\n      characters: \"套\",\n      meaning: \"set\",\n      pinyin: \"tào\"\n    },\n    {\n      characters: \"条\",\n      meaning: \"article\",\n      pinyin: \"tiáo\"\n    },\n    {\n      characters: \"件\",\n      meaning: \"article\",\n      pinyin: \"jiàn\"\n    },\n    {\n      characters: \"还不够\",\n      meaning: \"not enough\",\n      pinyin: \"hái bùgòu\"\n    },\n    {\n      characters: \"多穿点儿\",\n      meaning: \"wear more\",\n      pinyin: \"duō chuān diǎnr\"\n    },\n    {\n      characters: \"穿了\",\n      meaning: \"wore\",\n      pinyin: \"chuānle\"\n    },\n    {\n      characters: \"没穿\",\n      meaning: \"not wearing\",\n      pinyin: \"méi chuān\"\n    },\n    {\n      characters: \"觉得\",\n      meaning: \"think\",\n      pinyin: \"juédé\"\n    },\n    {\n      characters: \"最好是穿\",\n      meaning: \"better wear\",\n      pinyin: \"zuì hǎo shì chuān\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.1 Essentials\",\n  cards: [\n    {\n      characters: \"穿\",\n      meaning: \"wear\",\n      pinyin: \"chuān\"\n    },\n    {\n      characters: \"戴\",\n      meaning: \"wear\",\n      pinyin: \"dài\"\n    },\n    {\n      characters: \"衣服\",\n      meaning: \"clothes\",\n      pinyin: \"yīfú\"\n    },\n    {\n      characters: \"衬衫\",\n      meaning: \"shirt\",\n      pinyin: \"chènshān\"\n    },\n    {\n      characters: \"汗衫\",\n      meaning: \"T-shirt\",\n      pinyin: \"hànshān\"\n    },\n    {\n      characters: \"长裤\",\n      meaning: \"pants\",\n      pinyin: \"cháng kù\"\n    },\n    {\n      characters: \"短裤\",\n      meaning: \"shorts\",\n      pinyin: \"duǎnkù\"\n    },\n    {\n      characters: \"裙子\",\n      meaning: \"skirt\",\n      pinyin: \"qúnzi\"\n    },\n    {\n      characters: \"外套\",\n      meaning: \"jacket\",\n      pinyin: \"wàitào\"\n    },\n    {\n      characters: \"运动服\",\n      meaning: \"sportswear\",\n      pinyin: \"yùndòng fú\"\n    },\n    {\n      characters: \"牛仔裤\",\n      meaning: \"jeans\",\n      pinyin: \"niúzǎikù\"\n    },\n    {\n      characters: \"球鞋\",\n      meaning: \"sneakers\",\n      pinyin: \"qiúxié\"\n    },\n    {\n      characters: \"袜子\",\n      meaning: \"sock\",\n      pinyin: \"wàzi\"\n    },\n    {\n      characters: \"帽子\",\n      meaning: \"hat\",\n      pinyin: \"màozi\"\n    },\n    {\n      characters: \"墨镜\",\n      meaning: \"sunglasses\",\n      pinyin: \"mòjìng\"\n    },\n    {\n      characters: \"套\",\n      meaning: \"set\",\n      pinyin: \"tào\"\n    },\n    {\n      characters: \"条\",\n      meaning: \"article\",\n      pinyin: \"tiáo\"\n    },\n    {\n      characters: \"件\",\n      meaning: \"article\",\n      pinyin: \"jiàn\"\n    },\n    {\n      characters: \"还不够\",\n      meaning: \"not enough\",\n      pinyin: \"hái bùgòu\"\n    },\n    {\n      characters: \"觉得\",\n      meaning: \"think\",\n      pinyin: \"juédé\"\n    },\n    {\n      characters: \"最好是穿\",\n      meaning: \"better wear\",\n      pinyin: \"zuì hǎo shì chuān\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.2 Phrases\",\n  cards: [\n    {\n      characters: \"觉得\",\n      meaning: \"feel\",\n      pinyin: \"juédé\"\n    },\n    {\n      characters: \"怎么样\",\n      meaning: \"how about it\",\n      pinyin: \"zěnme yàng\"\n    },\n    {\n      characters: \"有点紧\",\n      meaning: \"a bit tight\",\n      pinyin: \"yǒudiǎn jǐn\"\n    },\n    {\n      characters: \"好看\",\n      meaning: \"good looking\",\n      pinyin: \"hǎokàn\"\n    },\n    {\n      characters: \"更好看\",\n      meaning: \"better looking\",\n      pinyin: \"gèng hǎokàn\"\n    },\n    {\n      characters: \"漂亮\",\n      meaning: \"pretty\",\n      pinyin: \"piàoliang\"\n    },\n    {\n      characters: \"一点\",\n      meaning: \"a little\",\n      pinyin: \"yīdiǎn\"\n    },\n    {\n      characters: \"合适\",\n      meaning: \"suitable\",\n      pinyin: \"héshì\"\n    },\n    {\n      characters: \"合身\",\n      meaning: \"fit\",\n      pinyin: \"héshēn\"\n    },\n    {\n      characters: \"怪\",\n      meaning: \"strange\",\n      pinyin: \"guài\"\n    },\n    {\n      characters: \"新潮\",\n      meaning: \"trendy\",\n      pinyin: \"xīncháo\"\n    },\n    {\n      characters: \"时髦\",\n      meaning: \"fashionable\",\n      pinyin: \"shímáo\"\n    },\n    {\n      characters: \"样子\",\n      meaning: \"look\",\n      pinyin: \"yàngzi\"\n    },\n    {\n      characters: \"新鞋\",\n      meaning: \"new shoes\",\n      pinyin: \"xīn xié\"\n    },\n    {\n      characters: \"领带\",\n      meaning: \"tie\",\n      pinyin: \"lǐngdài\"\n    },\n    {\n      characters: \"帽子\",\n      meaning: \"hat\",\n      pinyin: \"màozi\"\n    },\n    {\n      characters: \"买东西\",\n      meaning: \"shopping\",\n      pinyin: \"mǎi dōngxī\"\n    },\n    {\n      characters: \"牛仔裤\",\n      meaning: \"jeans\",\n      pinyin: \"niúzǎikù\"\n    },\n    {\n      characters: \"短\",\n      meaning: \"short\",\n      pinyin: \"duǎn\"\n    },\n    {\n      characters: \"长\",\n      meaning: \"long\",\n      pinyin: \"zhǎng\"\n    },\n    {\n      characters: \"等一等\",\n      meaning: \"wait a minute\",\n      pinyin: \"děng yī děng\"\n    },\n    {\n      characters: \"拿\",\n      meaning: \"take\",\n      pinyin: \"ná\"\n    },\n    {\n      characters: \"不错\",\n      meaning: \"good\",\n      pinyin: \"bùcuò\"\n    },\n    {\n      characters: \"还可以\",\n      meaning: \"alright\",\n      pinyin: \"hái kěyǐ\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.2 Essentials\",\n  cards: [\n    {\n      characters: \"有点紧\",\n      meaning: \"a bit tight\",\n      pinyin: \"yǒudiǎn jǐn\"\n    },\n    {\n      characters: \"漂亮\",\n      meaning: \"pretty\",\n      pinyin: \"piàoliang\"\n    },\n    {\n      characters: \"合适\",\n      meaning: \"suitable\",\n      pinyin: \"héshì\"\n    },\n    {\n      characters: \"合身\",\n      meaning: \"fit\",\n      pinyin: \"héshēn\"\n    },\n    {\n      characters: \"怪\",\n      meaning: \"strange\",\n      pinyin: \"guài\"\n    },\n    {\n      characters: \"新潮\",\n      meaning: \"trendy\",\n      pinyin: \"xīncháo\"\n    },\n    {\n      characters: \"时髦\",\n      meaning: \"fashionable\",\n      pinyin: \"shímáo\"\n    },\n    {\n      characters: \"领带\",\n      meaning: \"tie\",\n      pinyin: \"lǐngdài\"\n    },\n    {\n      characters: \"买东西\",\n      meaning: \"shopping\",\n      pinyin: \"mǎi dōngxī\"\n    },\n    {\n      characters: \"等一等\",\n      meaning: \"wait a minute\",\n      pinyin: \"děng yī děng\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.3 Phrases\",\n  cards: [\n    {\n      characters: \"颜色\",\n      meaning: \"color\",\n      pinyin: \"yánsè\"\n    },\n    {\n      characters: \"白色\",\n      meaning: \"white\",\n      pinyin: \"báisè\"\n    },\n    {\n      characters: \"黑色\",\n      meaning: \"black\",\n      pinyin: \"hēisè\"\n    },\n    {\n      characters: \"灰色\",\n      meaning: \"gray\",\n      pinyin: \"huīsè\"\n    },\n    {\n      characters: \"黄色\",\n      meaning: \"yellow\",\n      pinyin: \"huángsè\"\n    },\n    {\n      characters: \"绿色\",\n      meaning: \"green\",\n      pinyin: \"lǜsè\"\n    },\n    {\n      characters: \"红色\",\n      meaning: \"red\",\n      pinyin: \"hóngsè\"\n    },\n    {\n      characters: \"棕色\",\n      meaning: \"brown\",\n      pinyin: \"zōngsè\"\n    },\n    {\n      characters: \"蓝色\",\n      meaning: \"blue\",\n      pinyin: \"lán sè\"\n    },\n    {\n      characters: \"浅蓝色\",\n      meaning: \"light blue\",\n      pinyin: \"qiǎn lán sè\"\n    },\n    {\n      characters: \"深蓝色\",\n      meaning: \"navy blue\",\n      pinyin: \"shēnlán sè\"\n    },\n    {\n      characters: \"橙色\",\n      meaning: \"orange\",\n      pinyin: \"chéngsè\"\n    },\n    {\n      characters: \"紫色\",\n      meaning: \"purple\",\n      pinyin: \"zǐsè\"\n    },\n    {\n      characters: \"配\",\n      meaning: \"match\",\n      pinyin: \"pèi\"\n    },\n    {\n      characters: \"应该\",\n      meaning: \"should\",\n      pinyin: \"yīnggāi\"\n    },\n    {\n      characters: \"更好看\",\n      meaning: \"better look\",\n      pinyin: \"gèng hǎokàn\"\n    },\n    {\n      characters: \"最好看\",\n      meaning: \"best looking\",\n      pinyin: \"zuì hǎo kàn\"\n    },\n    {\n      characters: \"参加\",\n      meaning: \"participate\",\n      pinyin: \"cānjiā\"\n    },\n    {\n      characters: \"生日会\",\n      meaning: \"birthday party\",\n      pinyin: \"shēngrì huì\"\n    },\n    {\n      characters: \"试一试\",\n      meaning: \"give it a try\",\n      pinyin: \"shì yī shì\"\n    },\n    {\n      characters: \"穿起来\",\n      meaning: \"wear it up\",\n      pinyin: \"chuān qǐlái\"\n    },\n    {\n      characters: \"有点紧\",\n      meaning: \"a bit tight\",\n      pinyin: \"yǒudiǎn jǐn\"\n    },\n    {\n      characters: \"...跟...挺不配的\",\n      meaning: \"not quite match\",\n      pinyin: \"gēn tǐng bùpèi de\"\n    },\n    {\n      characters: \"还是\",\n      meaning: \"still is\",\n      pinyin: \"háishì\"\n    },\n    {\n      characters: \"一件红衬衫\",\n      meaning: \"a red shirt\",\n      pinyin: \"yī jiàn hóng chènshān\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.3 Essentials\",\n  cards: [\n    {\n      characters: \"颜色\",\n      meaning: \"color\",\n      pinyin: \"yánsè\"\n    },\n    {\n      characters: \"白色\",\n      meaning: \"white\",\n      pinyin: \"báisè\"\n    },\n    {\n      characters: \"黑色\",\n      meaning: \"black\",\n      pinyin: \"hēisè\"\n    },\n    {\n      characters: \"灰色\",\n      meaning: \"gray\",\n      pinyin: \"huīsè\"\n    },\n    {\n      characters: \"黄色\",\n      meaning: \"yellow\",\n      pinyin: \"huángsè\"\n    },\n    {\n      characters: \"绿色\",\n      meaning: \"green\",\n      pinyin: \"lǜsè\"\n    },\n    {\n      characters: \"红色\",\n      meaning: \"red\",\n      pinyin: \"hóngsè\"\n    },\n    {\n      characters: \"棕色\",\n      meaning: \"brown\",\n      pinyin: \"zōngsè\"\n    },\n    {\n      characters: \"蓝色\",\n      meaning: \"blue\",\n      pinyin: \"lán sè\"\n    },\n    {\n      characters: \"浅蓝色\",\n      meaning: \"light blue\",\n      pinyin: \"qiǎn lán sè\"\n    },\n    {\n      characters: \"深蓝色\",\n      meaning: \"navy blue\",\n      pinyin: \"shēnlán sè\"\n    },\n    {\n      characters: \"橙色\",\n      meaning: \"orange\",\n      pinyin: \"chéngsè\"\n    },\n    {\n      characters: \"紫色\",\n      meaning: \"purple\",\n      pinyin: \"zǐsè\"\n    },\n    {\n      characters: \"配\",\n      meaning: \"match\",\n      pinyin: \"pèi\"\n    },\n    {\n      characters: \"应该\",\n      meaning: \"should\",\n      pinyin: \"yīnggāi\"\n    },\n    {\n      characters: \"参加\",\n      meaning: \"participate\",\n      pinyin: \"cānjiā\"\n    },\n    {\n      characters: \"试一试\",\n      meaning: \"give it a try\",\n      pinyin: \"shì yī shì\"\n    },\n    {\n      characters: \"穿起来\",\n      meaning: \"wear it up\",\n      pinyin: \"chuān qǐlái\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"2.4 Phrases\",\n  cards: [\n    {\n      characters: \"眼睛\",\n      meaning: \"eye\",\n      pinyin: \"yǎnjīng\"\n    },\n    {\n      characters: \"头发\",\n      meaning: \"hair\",\n      pinyin: \"tóufǎ\"\n    },\n    {\n      characters: \"脸\",\n      meaning: \"face\",\n      pinyin: \"liǎn\"\n    },\n    {\n      characters: \"耳朵\",\n      meaning: \"ear\",\n      pinyin: \"ěrduǒ\"\n    },\n    {\n      characters: \"鼻子\",\n      meaning: \"nose\",\n      pinyin: \"bízi\"\n    },\n    {\n      characters: \"嘴巴\",\n      meaning: \"mouth\",\n      pinyin: \"zuǐbā\"\n    },\n    {\n      characters: \"胡子\",\n      meaning: \"moustache\",\n      pinyin: \"húzi\"\n    },\n    {\n      characters: \"长得\",\n      meaning: \"look\",\n      pinyin: \"zhǎng dé\"\n    },\n    {\n      characters: \"什么样\",\n      meaning: \"what kind of\",\n      pinyin: \"shénme yàng\"\n    },\n    {\n      characters: \"怎么\",\n      meaning: \"how\",\n      pinyin: \"zěnme\"\n    },\n    {\n      characters: \"见面\",\n      meaning: \"meet\",\n      pinyin: \"jiànmiàn\"\n    },\n    {\n      characters: \"男的\",\n      meaning: \"male\",\n      pinyin: \"nán de\"\n    },\n    {\n      characters: \"女的\",\n      meaning: \"female\",\n      pinyin: \"nǚ de\"\n    },\n    {\n      characters: \"个子\",\n      meaning: \"stature\",\n      pinyin: \"gèzi\"\n    },\n    {\n      characters: \"皮肤\",\n      meaning: \"skin\",\n      pinyin: \"pífū\"\n    },\n    {\n      characters: \"胖\",\n      meaning: \"fat\",\n      pinyin: \"pàng\"\n    },\n    {\n      characters: \"圆\",\n      meaning: \"round\",\n      pinyin: \"yuán\"\n    },\n    {\n      characters: \"瘦\",\n      meaning: \"thin\",\n      pinyin: \"shòu\"\n    },\n    {\n      characters: \"高\",\n      meaning: \"high\",\n      pinyin: \"gāo\"\n    },\n    {\n      characters: \"矮\",\n      meaning: \"short\",\n      pinyin: \"ǎi\"\n    },\n    {\n      characters: \"早\",\n      meaning: \"early\",\n      pinyin: \"zǎo\"\n    },\n    {\n      characters: \"晚\",\n      meaning: \"late\",\n      pinyin: \"wǎn\"\n    },\n    {\n      characters: \"漂亮\",\n      meaning: \"pretty\",\n      pinyin: \"piàoliang\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"3.1 Phrases\",\n  cards: [\n    {\n      characters: \"上面\",\n      meaning: \"above\",\n      pinyin: \"shàngmiàn\"\n    },\n    {\n      characters: \"下面\",\n      meaning: \"below\",\n      pinyin: \"xiàmiàn\"\n    },\n    {\n      characters: \"里面\",\n      meaning: \"inside\",\n      pinyin: \"lǐmiàn\"\n    },\n    {\n      characters: \"外面\",\n      meaning: \"outside\",\n      pinyin: \"wàimiàn\"\n    },\n    {\n      characters: \"前面\",\n      meaning: \"front\",\n      pinyin: \"qiánmiàn\"\n    },\n    {\n      characters: \"后面\",\n      meaning: \"behind\",\n      pinyin: \"hòumiàn\"\n    },\n    {\n      characters: \"旁边\",\n      meaning: \"next to\",\n      pinyin: \"pángbiān\"\n    },\n    {\n      characters: \"对面\",\n      meaning: \"opposite\",\n      pinyin: \"duìmiàn\"\n    },\n    {\n      characters: \"左边\",\n      meaning: \"left\",\n      pinyin: \"zuǒbiān\"\n    },\n    {\n      characters: \"右边\",\n      meaning: \"right\",\n      pinyin: \"yòubiān\"\n    },\n    {\n      characters: \"中间\",\n      meaning: \"intermediate\",\n      pinyin: \"zhōngjiān\"\n    },\n    {\n      characters: \"隔壁\",\n      meaning: \"next door\",\n      pinyin: \"gébì\"\n    },\n    {\n      characters: \"在的上面\",\n      meaning: \"on top\",\n      pinyin: \"zài de shàngmiàn\"\n    },\n    {\n      characters: \"教师楼\",\n      meaning: \"teacher building\",\n      pinyin: \"jiàoshī lóu\"\n    },\n    {\n      characters: \"办公室\",\n      meaning: \"office\",\n      pinyin: \"bàngōngshì\"\n    },\n    {\n      characters: \"楼上\",\n      meaning: \"upstairs\",\n      pinyin: \"lóu shàng\"\n    },\n    {\n      characters: \"楼下\",\n      meaning: \"downstairs\",\n      pinyin: \"lóu xià\"\n    },\n    {\n      characters: \"二层\",\n      meaning: \"second floor\",\n      pinyin: \"èr céng\"\n    },\n    {\n      characters: \"那头儿\",\n      meaning: \"that end\",\n      pinyin: \"nà tóur\"\n    },\n    {\n      characters: \"好像\",\n      meaning: \"like\",\n      pinyin: \"hǎoxiàng\"\n    },\n    {\n      characters: \"五号房间\",\n      meaning: \"room 5\",\n      pinyin: \"wǔ hào fángjiān\"\n    },\n    {\n      characters: \"在\",\n      meaning: \"in\",\n      pinyin: \"zài\"\n    },\n    {\n      characters: \"不客气\",\n      meaning: \"you are welcome\",\n      pinyin: \"bù kèqì\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"3.2 Phrases\",\n  cards: [\n    {\n      characters: \"正在\",\n      meaning: \"being\",\n      pinyin: \"zhèngzài\"\n    },\n    {\n      characters: \"猜\",\n      meaning: \"guess\",\n      pinyin: \"cāi\"\n    },\n    {\n      characters: \"猜不着\",\n      meaning: \"can't guess\",\n      pinyin: \"cāi bùzháo\"\n    },\n    {\n      characters: \"复习\",\n      meaning: \"review\",\n      pinyin: \"fùxí\"\n    },\n    {\n      characters: \"功课\",\n      meaning: \"homework\",\n      pinyin: \"gōngkè\"\n    },\n    {\n      characters: \"做\",\n      meaning: \"do\",\n      pinyin: \"zuò\"\n    },\n    {\n      characters: \"看书\",\n      meaning: \"reading\",\n      pinyin: \"kànshū\"\n    },\n    {\n      characters: \"讨人嫌\",\n      meaning: \"be suspicious\",\n      pinyin: \"tǎo rén xián\"\n    },\n    {\n      characters: \"球场\",\n      meaning: \"court\",\n      pinyin: \"qiúchǎng\"\n    },\n    {\n      characters: \"房间\",\n      meaning: \"room\",\n      pinyin: \"fángjiān\"\n    },\n    {\n      characters: \"车站\",\n      meaning: \"station\",\n      pinyin: \"chēzhàn\"\n    },\n    {\n      characters: \"家里\",\n      meaning: \"home\",\n      pinyin: \"jiālǐ\"\n    },\n    {\n      characters: \"健身操\",\n      meaning: \"aerobics\",\n      pinyin: \"jiànshēn cāo\"\n    },\n    {\n      characters: \"等\",\n      meaning: \"wait\",\n      pinyin: \"děng\"\n    },\n    {\n      characters: \"玩\",\n      meaning: \"play\",\n      pinyin: \"wán\"\n    },\n    {\n      characters: \"电子游戏\",\n      meaning: \"electronic games\",\n      pinyin: \"diànzǐ yóuxì\"\n    },\n    {\n      characters: \"接电话\",\n      meaning: \"answer the call\",\n      pinyin: \"jiē diànhuà\"\n    },\n    {\n      characters: \"一副墨镜\",\n      meaning: \"a pair of sunglasses\",\n      pinyin: \"yī fù mòjìng\"\n    },\n    {\n      characters: \"减肥\",\n      meaning: \"lose weight\",\n      pinyin: \"jiǎnféi\"\n    },\n    {\n      characters: \"男\",\n      meaning: \"male\",\n      pinyin: \"nán\"\n    },\n    {\n      characters: \"赶时髦\",\n      meaning: \"fashion\",\n      pinyin: \"gǎnshímáo\"\n    },\n    {\n      characters: \"图书馆\",\n      meaning: \"library\",\n      pinyin: \"túshū guǎn\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"3.3 Phrases\",\n  cards: [\n    {\n      characters: \"操场\",\n      meaning: \"playground\",\n      pinyin: \"cāochǎng\"\n    },\n    {\n      characters: \"厕所\",\n      meaning: \"lavatory\",\n      pinyin: \"cèsuǒ\"\n    },\n    {\n      characters: \"初二\",\n      meaning: \"second year of middle school\",\n      pinyin: \"chū èr\"\n    },\n    {\n      characters: \"打开\",\n      meaning: \"open\",\n      pinyin: \"dǎkāi\"\n    },\n    {\n      characters: \"大门\",\n      meaning: \"main entrance\",\n      pinyin: \"dàmén\"\n    },\n    {\n      characters: \"打乒乓球\",\n      meaning: \"play table tennis\",\n      pinyin: \"dǎ pīngpāng qiú\"\n    },\n    {\n      characters: \"带去\",\n      meaning: \"bring it with\",\n      pinyin: \"dài qù\"\n    },\n    {\n      characters: \"附近\",\n      meaning: \"nearby\",\n      pinyin: \"fùjìn\"\n    },\n    {\n      characters: \"好像\",\n      meaning: \"like\",\n      pinyin: \"hǎoxiàng\"\n    },\n    {\n      characters: \"欢迎\",\n      meaning: \"welcome\",\n      pinyin: \"huānyíng\"\n    },\n    {\n      characters: \"几年级\",\n      meaning: \"what grade\",\n      pinyin: \"jǐ niánjí\"\n    },\n    {\n      characters: \"记起来\",\n      meaning: \"remember\",\n      pinyin: \"jì qǐlái\"\n    },\n    {\n      characters: \"交给\",\n      meaning: \"hand over\",\n      pinyin: \"jiāo gěi\"\n    },\n    {\n      characters: \"礼堂\",\n      meaning: \"hall\",\n      pinyin: \"lǐtáng\"\n    },\n    {\n      characters: \"楼里\",\n      meaning: \"in the building\",\n      pinyin: \"lóu lǐ\"\n    },\n    {\n      characters: \"哪个班\",\n      meaning: \"which class\",\n      pinyin: \"nǎgè bān\"\n    },\n    {\n      characters: \"男的\",\n      meaning: \"male\",\n      pinyin: \"nán de\"\n    },\n    {\n      characters: \"三班\",\n      meaning: \"third shift\",\n      pinyin: \"sān bān\"\n    },\n    {\n      characters: \"图书馆\",\n      meaning: \"library\",\n      pinyin: \"túshū guǎn\"\n    },\n    {\n      characters: \"小卖部\",\n      meaning: \"small store\",\n      pinyin: \"xiǎomàibù\"\n    },\n    {\n      characters: \"新生\",\n      meaning: \"new student\",\n      pinyin: \"xīnshēng\"\n    },\n    {\n      characters: \"一层\",\n      meaning: \"first floor\",\n      pinyin: \"yī céng\"\n    },\n    {\n      characters: \"右边\",\n      meaning: \"right\",\n      pinyin: \"yòubiān\"\n    },\n    {\n      characters: \"左边\",\n      meaning: \"left\",\n      pinyin: \"zuǒbiān\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"3.4 Phrases\",\n  cards: [\n    {\n      characters: \"帮\",\n      meaning: \"help\",\n      pinyin: \"bāng\"\n    },\n    {\n      characters: \"不懂\",\n      meaning: \"don't understand\",\n      pinyin: \"bù dǒng\"\n    },\n    {\n      characters: \"不太懂\",\n      meaning: \"don't understand\",\n      pinyin: \"bù tài dǒng\"\n    },\n    {\n      characters: \"懂\",\n      meaning: \"understand\",\n      pinyin: \"dǒng\"\n    },\n    {\n      characters: \"刚才\",\n      meaning: \"just now\",\n      pinyin: \"gāngcái\"\n    },\n    {\n      characters: \"高兴\",\n      meaning: \"happy\",\n      pinyin: \"gāoxìng\"\n    },\n    {\n      characters: \"刮风\",\n      meaning: \"windy\",\n      pinyin: \"guā fēng\"\n    },\n    {\n      characters: \"记不起来了\",\n      meaning: \"can't remember\",\n      pinyin: \"jì bù qǐláile\"\n    },\n    {\n      characters: \"记起来了\",\n      meaning: \"remember it\",\n      pinyin: \"jì qǐláile\"\n    },\n    {\n      characters: \"明白\",\n      meaning: \"understand\",\n      pinyin: \"míngbái\"\n    },\n    {\n      characters: \"瘦\",\n      meaning: \"skinny\",\n      pinyin: \"shòu\"\n    },\n    {\n      characters: \"忘了\",\n      meaning: \"forget\",\n      pinyin: \"wàngle\"\n    },\n    {\n      characters: \"问问\",\n      meaning: \"ask\",\n      pinyin: \"wèn wèn\"\n    },\n    {\n      characters: \"下雨\",\n      meaning: \"rain\",\n      pinyin: \"xià yǔ\"\n    },\n    {\n      characters: \"想一想\",\n      meaning: \"think about it\",\n      pinyin: \"xiǎng yī xiǎng\"\n    },\n    {\n      characters: \"意思\",\n      meaning: \"meaning\",\n      pinyin: \"yìsi\"\n    },\n    {\n      characters: \"在这儿\",\n      meaning: \"here\",\n      pinyin: \"zài zhè'er\"\n    },\n    {\n      characters: \"这个词\",\n      meaning: \"this phrase\",\n      pinyin: \"zhège cí\"\n    },\n    {\n      characters: \"这句话\",\n      meaning: \"this sentence\",\n      pinyin: \"zhè jù huà\"\n    },\n    {\n      characters: \"昨天\",\n      meaning: \"yesterday\",\n      pinyin: \"zuótiān\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"3.5 Phrases\",\n  cards: [\n    {\n      characters: \"帮忙\",\n      meaning: \"help\",\n      pinyin: \"bāngmáng\"\n    },\n    {\n      characters: \"不用\",\n      meaning: \"no need to\",\n      pinyin: \"bùyòng\"\n    },\n    {\n      characters: \"得\",\n      meaning: \"got\",\n      pinyin: \"dé\"\n    },\n    {\n      characters: \"地址\",\n      meaning: \"address\",\n      pinyin: \"dìzhǐ\"\n    },\n    {\n      characters: \"电话号码\",\n      meaning: \"telephone number\",\n      pinyin: \"diànhuà hàomǎ\"\n    },\n    {\n      characters: \"汉语课\",\n      meaning: \"Chinese class\",\n      pinyin: \"hànyǔ kè\"\n    },\n    {\n      characters: \"好像\",\n      meaning: \"like\",\n      pinyin: \"hǎoxiàng\"\n    },\n    {\n      characters: \"花园路\",\n      meaning: \"garden road\",\n      pinyin: \"huāyuán lù\"\n    },\n    {\n      characters: \"回家\",\n      meaning: \"come back home\",\n      pinyin: \"huí jiā\"\n    },\n    {\n      characters: \"会说\",\n      meaning: \"can speak\",\n      pinyin: \"huì shuō\"\n    },\n    {\n      characters: \"街\",\n      meaning: \"street\",\n      pinyin: \"jiē\"\n    },\n    {\n      characters: \"进来\",\n      meaning: \"come in\",\n      pinyin: \"jìnlái\"\n    },\n    {\n      characters: \"可以\",\n      meaning: \"can\",\n      pinyin: \"kěyǐ\"\n    },\n    {\n      characters: \"路\",\n      meaning: \"road\",\n      pinyin: \"lù\"\n    },\n    {\n      characters: \"没什么\",\n      meaning: \"it's nothing\",\n      pinyin: \"méishénme\"\n    },\n    {\n      characters: \"拿\",\n      meaning: \"take\",\n      pinyin: \"ná\"\n    },\n    {\n      characters: \"省\",\n      meaning: \"province\",\n      pinyin: \"shěng\"\n    },\n    {\n      characters: \"市\",\n      meaning: \"city\",\n      pinyin: \"shì\"\n    },\n    {\n      characters: \"有空儿\",\n      meaning: \"available\",\n      pinyin: \"yǒu kòng er\"\n    },\n    {\n      characters: \"有事儿\",\n      meaning: \"something\",\n      pinyin: \"yǒushì er\"\n    },\n    {\n      characters: \"有意思\",\n      meaning: \"interesting\",\n      pinyin: \"yǒuyìsi\"\n    },\n    {\n      characters: \"找\",\n      meaning: \"find\",\n      pinyin: \"zhǎo\"\n    },\n    {\n      characters: \"做功课\",\n      meaning: \"doing homework\",\n      pinyin: \"zuò gōngkè\"\n    },\n    {\n      characters: \"做作业\",\n      meaning: \"doing homework\",\n      pinyin: \"zuò zuo yè\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"4.1-4.2 Phrases\",\n  cards: [\n    {\n      characters: \"百\",\n      meaning: \"hundred\",\n      pinyin: \"bǎi\"\n    },\n    {\n      characters: \"千\",\n      meaning: \"thousand\",\n      pinyin: \"qiān\"\n    },\n    {\n      characters: \"万\",\n      meaning: \"ten thousand\",\n      pinyin: \"wàn\"\n    },\n    {\n      characters: \"上课\",\n      meaning: \"class\",\n      pinyin: \"shàngkè\"\n    },\n    {\n      characters: \"四节课\",\n      meaning: \"four lessons\",\n      pinyin: \"sì jié kè\"\n    },\n    {\n      characters: \"上学\",\n      meaning: \"go to school\",\n      pinyin: \"shàngxué\"\n    },\n    {\n      characters: \"放学回家\",\n      meaning: \"go home after school\",\n      pinyin: \"fàngxué huí jiā\"\n    },\n    {\n      characters: \"学校\",\n      meaning: \"school\",\n      pinyin: \"xuéxiào\"\n    },\n    {\n      characters: \"老师\",\n      meaning: \"teacher\",\n      pinyin: \"lǎoshī\"\n    },\n    {\n      characters: \"班主任\",\n      meaning: \"head teacher\",\n      pinyin: \"bānzhǔrèn\"\n    },\n    {\n      characters: \"学生\",\n      meaning: \"student\",\n      pinyin: \"xuéshēng\"\n    },\n    {\n      characters: \"男生\",\n      meaning: \"boy\",\n      pinyin: \"nánshēng\"\n    },\n    {\n      characters: \"女生\",\n      meaning: \"girl\",\n      pinyin: \"nǚshēng\"\n    },\n    {\n      characters: \"同伴\",\n      meaning: \"companion\",\n      pinyin: \"tóngbàn\"\n    },\n    {\n      characters: \"同学\",\n      meaning: \"classmate\",\n      pinyin: \"tóngxué\"\n    },\n    {\n      characters: \"朋友\",\n      meaning: \"friend\",\n      pinyin: \"péngyǒu\"\n    },\n    {\n      characters: \"差不多\",\n      meaning: \"almost\",\n      pinyin: \"chàbùduō\"\n    },\n    {\n      characters: \"一共\",\n      meaning: \"total\",\n      pinyin: \"yīgòng\"\n    },\n    {\n      characters: \"早上\",\n      meaning: \"morning\",\n      pinyin: \"zǎoshang\"\n    },\n    {\n      characters: \"晚上\",\n      meaning: \"at night\",\n      pinyin: \"wǎnshàng\"\n    },\n    {\n      characters: \"从到\",\n      meaning: \"from to\",\n      pinyin: \"cóng dào\"\n    },\n    {\n      characters: \"今年\",\n      meaning: \"this year\",\n      pinyin: \"jīnnián\"\n    },\n    {\n      characters: \"每天\",\n      meaning: \"every day\",\n      pinyin: \"měitiān\"\n    },\n    {\n      characters: \"有时候\",\n      meaning: \"sometimes\",\n      pinyin: \"yǒu shíhòu\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"4.3 Phrases\",\n  cards: [\n    {\n      characters: \"不许\",\n      meaning: \"not allowed\",\n      pinyin: \"bùxǔ\"\n    },\n    {\n      characters: \"不许吸烟\",\n      meaning: \"no smoking\",\n      pinyin: \"bùxǔ xīyān\"\n    },\n    {\n      characters: \"不要\",\n      meaning: \"do not\",\n      pinyin: \"bùyào\"\n    },\n    {\n      characters: \"吵\",\n      meaning: \"noisy\",\n      pinyin: \"chǎo\"\n    },\n    {\n      characters: \"迟到\",\n      meaning: \"be late\",\n      pinyin: \"chídào\"\n    },\n    {\n      characters: \"锻炼身体\",\n      meaning: \"exercise\",\n      pinyin: \"duànliàn shēntǐ\"\n    },\n    {\n      characters: \"复习\",\n      meaning: \"review\",\n      pinyin: \"fùxí\"\n    },\n    {\n      characters: \"该\",\n      meaning: \"the\",\n      pinyin: \"gāi\"\n    },\n    {\n      characters: \"个子\",\n      meaning: \"personal\",\n      pinyin: \"gèzi\"\n    },\n    {\n      characters: \"看窗外\",\n      meaning: \"look out the window\",\n      pinyin: \"kàn chuāngwài\"\n    },\n    {\n      characters: \"可以\",\n      meaning: \"can\",\n      pinyin: \"kěyǐ\"\n    },\n    {\n      characters: \"怕\",\n      meaning: \"afraid\",\n      pinyin: \"pà\"\n    },\n    {\n      characters: \"铅笔\",\n      meaning: \"pencil\",\n      pinyin: \"qiānbǐ\"\n    },\n    {\n      characters: \"请勿\",\n      meaning: \"do not\",\n      pinyin: \"qǐng wù\"\n    },\n    {\n      characters: \"收拾\",\n      meaning: \"pack\",\n      pinyin: \"shōushí\"\n    },\n    {\n      characters: \"停\",\n      meaning: \"stop\",\n      pinyin: \"tíng\"\n    },\n    {\n      characters: \"为什么\",\n      meaning: \"why\",\n      pinyin: \"wèishéme\"\n    },\n    {\n      characters: \"笑\",\n      meaning: \"laugh\",\n      pinyin: \"xiào\"\n    },\n    {\n      characters: \"行\",\n      meaning: \"row\",\n      pinyin: \"xíng\"\n    },\n    {\n      characters: \"严格\",\n      meaning: \"strict\",\n      pinyin: \"yángé\"\n    },\n    {\n      characters: \"预习\",\n      meaning: \"preview\",\n      pinyin: \"yùxí\"\n    },\n    {\n      characters: \"怎么\",\n      meaning: \"how\",\n      pinyin: \"zěnme\"\n    },\n    {\n      characters: \"这道题\",\n      meaning: \"this question\",\n      pinyin: \"zhè dào tí\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"4.4-4.5 Phrases\",\n  cards: [\n    {\n      characters: \"历史课\",\n      meaning: \"history class\",\n      pinyin: \"lìshǐ kè\"\n    },\n    {\n      characters: \"有意思\",\n      meaning: \"interesting\",\n      pinyin: \"yǒuyìsi\"\n    },\n    {\n      characters: \"想\",\n      meaning: \"think\",\n      pinyin: \"xiǎng\"\n    },\n    {\n      characters: \"地理课\",\n      meaning: \"geography class\",\n      pinyin: \"dìlǐ kè\"\n    },\n    {\n      characters: \"外语\",\n      meaning: \"foreign language\",\n      pinyin: \"wàiyǔ\"\n    },\n    {\n      characters: \"有用\",\n      meaning: \"it works\",\n      pinyin: \"yǒuyòng\"\n    },\n    {\n      characters: \"美术课\",\n      meaning: \"art class\",\n      pinyin: \"měishù kè\"\n    },\n    {\n      characters: \"科学课\",\n      meaning: \"science class\",\n      pinyin: \"kēxué kè\"\n    },\n    {\n      characters: \"讨厌\",\n      meaning: \"hate\",\n      pinyin: \"tǎoyàn\"\n    },\n    {\n      characters: \"难学\",\n      meaning: \"difficult to learn\",\n      pinyin: \"nán xué\"\n    },\n    {\n      characters: \"新课\",\n      meaning: \"new lesson\",\n      pinyin: \"xīn kè\"\n    },\n    {\n      characters: \"旧课\",\n      meaning: \"old class\",\n      pinyin: \"jiù kè\"\n    },\n    {\n      characters: \"几门课\",\n      meaning: \"how many courses\",\n      pinyin: \"jǐ mén kè\"\n    },\n    {\n      characters: \"练习\",\n      meaning: \"practice\",\n      pinyin: \"liànxí\"\n    },\n    {\n      characters: \"课程表\",\n      meaning: \"class schedule\",\n      pinyin: \"kèchéng biǎo\"\n    },\n    {\n      characters: \"先 ... 后\",\n      meaning: \"first... later\",\n      pinyin: \"xiān... hòu\"\n    },\n    {\n      characters: \"才\",\n      meaning: \"only\",\n      pinyin: \"cái\"\n    },\n    {\n      characters: \"放心\",\n      meaning: \"rest assured\",\n      pinyin: \"fàngxīn\"\n    },\n    {\n      characters: \"活动\",\n      meaning: \"activity\",\n      pinyin: \"huódòng\"\n    },\n    {\n      characters: \"看来\",\n      meaning: \"it seems\",\n      pinyin: \"kàn lái\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"4.6-4.7 Phrases\",\n  cards: [\n    {\n      characters: \"小时\",\n      meaning: \"hour\",\n      pinyin: \"xiǎoshí\"\n    },\n    {\n      characters: \"分钟\",\n      meaning: \"minute\",\n      pinyin: \"fēnzhōng\"\n    },\n    {\n      characters: \"多长时间\",\n      meaning: \"how long\",\n      pinyin: \"duō cháng shíjiān\"\n    },\n    {\n      characters: \"练习\",\n      meaning: \"exercise\",\n      pinyin: \"liànxí\"\n    },\n    {\n      characters: \"课间休息\",\n      meaning: \"recess\",\n      pinyin: \"kè jiān xiūxí\"\n    },\n    {\n      characters: \"语文\",\n      meaning: \"language\",\n      pinyin: \"yǔwén\"\n    },\n    {\n      characters: \"数学\",\n      meaning: \"mathematics\",\n      pinyin: \"shùxué\"\n    },\n    {\n      characters: \"电子游戏\",\n      meaning: \"electronic games\",\n      pinyin: \"diànzǐ yóuxì\"\n    },\n    {\n      characters: \"大忙人\",\n      meaning: \"busy person\",\n      pinyin: \"dàmáng rén\"\n    },\n    {\n      characters: \"才\",\n      meaning: \"only\",\n      pinyin: \"cái\"\n    },\n    {\n      characters: \"就\",\n      meaning: \"on\",\n      pinyin: \"jiù\"\n    },\n    {\n      characters: \"放心\",\n      meaning: \"rest assured\",\n      pinyin: \"fàngxīn\"\n    },\n    {\n      characters: \"跑步\",\n      meaning: \"run\",\n      pinyin: \"pǎobù\"\n    },\n    {\n      characters: \"音乐下足\",\n      meaning: \"music underfoot\",\n      pinyin: \"yīnyuè xià zú\"\n    },\n    {\n      characters: \"活动\",\n      meaning: \"activity\",\n      pinyin: \"huódòng\"\n    },\n    {\n      characters: \"考试\",\n      meaning: \"examination\",\n      pinyin: \"kǎoshì\"\n    },\n    {\n      characters: \"测验\",\n      meaning: \"test\",\n      pinyin: \"cèyàn\"\n    },\n    {\n      characters: \"紧张\",\n      meaning: \"tension\",\n      pinyin: \"jǐnzhāng\"\n    },\n    {\n      characters: \"得\",\n      meaning: \"got\",\n      pinyin: \"dé\"\n    },\n    {\n      characters: \"困\",\n      meaning: \"sleepy\",\n      pinyin: \"kùn\"\n    },\n    {\n      characters: \"及格\",\n      meaning: \"pass\",\n      pinyin: \"jígé\"\n    },\n    {\n      characters: \"第一题\",\n      meaning: \"first question\",\n      pinyin: \"dì yī tí\"\n    },\n    {\n      characters: \"累死了\",\n      meaning: \"worn out\",\n      pinyin: \"lèi sǐle\"\n    },\n    {\n      characters: \"刚才\",\n      meaning: \"just now\",\n      pinyin: \"gāngcái\"\n    }\n  ]\n};\n\nexport default deck;\n","import { Deck } from \"../types\";\n\nconst deck: Deck = {\n  name: \"Sample Phrases\",\n  cards: [\n    {\n      characters: \"坐公共汽车\",\n      pinyin: \"zuò gōnggòng qìchē\",\n      meaning: \"take a bus\"\n    },\n    {\n      characters: \"介绍\",\n      pinyin: \"jiè shào\",\n      meaning: \"introduction\"\n    },\n    {\n      characters: \"一下儿\",\n      pinyin: \"yī xiàr\",\n      meaning: \"for a short while\"\n    }\n  ]\n};\n\nexport default deck;\n","export default function randomlySort<T>(arr: T[]): T[] {\n  const clone = arr.slice();\n  for (let i = 0; i < 256; i++) {\n    clone.sort(halfPositiveHalfNegative);\n  }\n  return clone;\n}\n\nfunction halfPositiveHalfNegative(): number {\n  return Math.random() - 0.5;\n}\n","import React from \"react\";\nimport DeckMenu from \"./containers/DeckMenu\";\nimport DrillMenu from \"./containers/DrillMenu\";\nimport PostDrillMenu from \"./containers/PostDrillMenu\";\nimport ReadingDrill from \"./containers/ReadingDrill\";\nimport SettingsMenu from \"./containers/SettingsMenu\";\nimport WritingDrill from \"./containers/WritingDrill\";\nimport decks from \"./decks/index\";\nimport randomlySort from \"./randomlySort\";\nimport {\n  AppState,\n  Card,\n  Deck,\n  DeckType,\n  DrillType,\n  PointerDownEvent,\n  PointerMoveEvent,\n  SwipeDirectionType,\n} from \"./types\";\n\nconst HORIZONTAL_SWIPE_SIZE = window.innerWidth * 0.3;\nconst VERTICAL_SWIPE_SIZE = window.innerHeight * 0.2;\n\nconst SIMULATED_SWIPE_DURATION = 0.15e3;\nconst SIMULATED_SWIPE_PAUSE_FACTOR = 0.2;\n\nconst PEN_STROKE_WIDTH = 2;\n\nconst PEN_GUESS_COLOR = \"#000088\";\nconst PEN_CORRECTION_COLOR = \"#0088FF\";\n\nconst SUPPORTS_TOUCH = \"ontouchstart\" in window;\n\nexport default class CardsAgainstIlliteracy extends React.Component<\n  {},\n  AppState\n> {\n  private canvasRef: React.RefObject<HTMLCanvasElement>;\n  private previousPenLocation: null | { x: number; y: number };\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      type: \"DECK_MENU\",\n      selectedSwipeDirection: localStorage.selectedSwipeDirection || \"Right\",\n      displayedDeckTypes: localStorage.displayedDeckTypes\n        ? JSON.parse(localStorage.displayedDeckTypes)\n        : { Phrases: true, Essentials: true },\n      areWritingCorrectionsEnabled:\n        localStorage.areWritingCorrectionsEnabled === \"true\",\n\n      remainingCards: (undefined as unknown) as Card[],\n      deckName: (undefined as unknown) as string,\n      isTopCardRevealed: (undefined as unknown) as boolean,\n      normalizedDelta: (undefined as unknown) as number,\n      deck: (undefined as unknown) as Deck,\n      cardsToRepractice: (undefined as unknown) as Card[],\n      startingTouch: null,\n    };\n\n    this.bindMethods();\n\n    this.canvasRef = React.createRef();\n    this.previousPenLocation = null;\n  }\n\n  bindMethods(): void {\n    this.onSettings = this.onSettings.bind(this);\n    this.onSelectSwipeDirection = this.onSelectSwipeDirection.bind(this);\n    this.onToggleDeckTypeDisplay = this.onToggleDeckTypeDisplay.bind(this);\n    this.onToggleWritingCorrections = this.onToggleWritingCorrections.bind(\n      this\n    );\n    this.onDeckSelect = this.onDeckSelect.bind(this);\n    this.onDrillSelect = this.onDrillSelect.bind(this);\n    this.onCardReveal = this.onCardReveal.bind(this);\n    this.onAffirmationSwipeStart = this.onAffirmationSwipeStart.bind(this);\n    this.onAffirmationSwipeMove = this.onAffirmationSwipeMove.bind(this);\n    this.onAffirmationSwipeEnd = this.onAffirmationSwipeEnd.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.onCardCorrect = this.onCardCorrect.bind(this);\n    this.onCardIncorrect = this.onCardIncorrect.bind(this);\n    this.onDrillRestart = this.onDrillRestart.bind(this);\n    this.onHome = this.onHome.bind(this);\n    this.onPenStart = this.onPenStart.bind(this);\n    this.onPenMove = this.onPenMove.bind(this);\n    this.onPenEnd = this.onPenEnd.bind(this);\n  }\n\n  componentDidMount() {\n    if (!SUPPORTS_TOUCH) {\n      window.addEventListener(\"keyup\", this.onKeyUp);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!SUPPORTS_TOUCH) {\n      window.removeEventListener(\"keyup\", this.onKeyUp);\n    }\n  }\n\n  render() {\n    const { type } = this.state;\n    if (type === \"SETTINGS_MENU\") {\n      return (\n        <SettingsMenu\n          selectedSwipeDirection={this.state.selectedSwipeDirection}\n          displayedDeckTypes={this.state.displayedDeckTypes}\n          areWritingCorrectionsEnabled={this.state.areWritingCorrectionsEnabled}\n          onHome={this.onHome}\n          onSelectSwipeDirection={this.onSelectSwipeDirection}\n          onToggleDeckTypeDisplay={this.onToggleDeckTypeDisplay}\n          onToggleWritingCorrections={this.onToggleWritingCorrections}\n        />\n      );\n    } else if (type === \"DECK_MENU\") {\n      return (\n        <DeckMenu\n          decks={this.getDisplayedDecks()}\n          onSettings={this.onSettings}\n          onSelect={this.onDeckSelect}\n        />\n      );\n    } else if (type === \"DRILL_MENU\") {\n      const { name } = this.state.deck;\n      return (\n        <DrillMenu\n          deckName={name}\n          onDrillSelect={this.onDrillSelect}\n          onHome={this.onHome}\n        />\n      );\n    } else if (\n      [\"READING_DRILL\", \"WRITING_DRILL\"].includes(type) &&\n      this.state.remainingCards.length === 0\n    ) {\n      return (\n        <PostDrillMenu\n          deckName={this.state.deckName}\n          onRestart={this.onDrillRestart}\n          onHome={this.onHome}\n        />\n      );\n    } else if (type === \"READING_DRILL\") {\n      const {\n        deckName,\n        remainingCards,\n        isTopCardRevealed,\n        selectedSwipeDirection,\n        normalizedDelta,\n      } = this.state;\n\n      return (\n        <ReadingDrill\n          deckName={deckName}\n          remainingCards={remainingCards}\n          isTopCardRevealed={isTopCardRevealed}\n          selectedSwipeDirection={selectedSwipeDirection}\n          normalizedDelta={normalizedDelta}\n          onHome={this.onHome}\n          onReveal={this.onCardReveal}\n          onAffirmationSwipeStart={this.onAffirmationSwipeStart}\n          onAffirmationSwipeMove={this.onAffirmationSwipeMove}\n          onAffirmationSwipeEnd={this.onAffirmationSwipeEnd}\n        />\n      );\n    } else if (type === \"WRITING_DRILL\") {\n      const {\n        deckName,\n        remainingCards,\n        isTopCardRevealed,\n        selectedSwipeDirection,\n        normalizedDelta,\n        areWritingCorrectionsEnabled,\n      } = this.state;\n\n      return (\n        <WritingDrill\n          deckName={deckName}\n          remainingCards={remainingCards}\n          isTopCardRevealed={isTopCardRevealed}\n          selectedSwipeDirection={selectedSwipeDirection}\n          normalizedDelta={normalizedDelta}\n          areWritingCorrectionsEnabled={areWritingCorrectionsEnabled}\n          onHome={this.onHome}\n          onPenStart={this.onPenStart}\n          onPenMove={this.onPenMove}\n          onPenEnd={this.onPenEnd}\n          onReveal={this.onCardReveal}\n          onAffirmationSwipeStart={this.onAffirmationSwipeStart}\n          onAffirmationSwipeMove={this.onAffirmationSwipeMove}\n          onAffirmationSwipeEnd={this.onAffirmationSwipeEnd}\n          canvasRef={this.canvasRef}\n        />\n      );\n    }\n  }\n\n  onSettings() {\n    this.setState({\n      type: \"SETTINGS_MENU\",\n    });\n  }\n\n  onSelectSwipeDirection(selectedSwipeDirection: SwipeDirectionType) {\n    this.setState({\n      selectedSwipeDirection,\n    });\n    localStorage.selectedSwipeDirection = selectedSwipeDirection;\n  }\n\n  onToggleDeckTypeDisplay(deckType: DeckType) {\n    const displayedDeckTypes = {\n      ...this.state.displayedDeckTypes,\n      [deckType]: !this.state.displayedDeckTypes[deckType],\n    };\n    this.setState({\n      displayedDeckTypes,\n    });\n    localStorage.displayedDeckTypes = JSON.stringify(displayedDeckTypes);\n  }\n\n  onToggleWritingCorrections() {\n    const areWritingCorrectionsEnabled = !this.state\n      .areWritingCorrectionsEnabled;\n    this.setState({\n      areWritingCorrectionsEnabled,\n    });\n    localStorage.areWritingCorrectionsEnabled = areWritingCorrectionsEnabled;\n  }\n\n  getDisplayedDecks() {\n    const displayedDeckTypes = (Object.keys(\n      this.state.displayedDeckTypes\n    ) as (keyof AppState[\"displayedDeckTypes\"])[]).filter(\n      (key) => this.state.displayedDeckTypes[key]\n    );\n    return decks.filter((deck) =>\n      displayedDeckTypes.some((deckType) => deck.name.includes(deckType))\n    );\n  }\n\n  onDeckSelect(deck: Deck) {\n    this.setState({\n      type: \"DRILL_MENU\",\n      deck,\n    });\n  }\n\n  onDrillSelect(drill: DrillType) {\n    if (drill === \"READING_DRILL\" || drill === \"WRITING_DRILL\") {\n      const { name, cards } = this.state.deck;\n      this.setState({\n        type: drill,\n        deckName: name,\n        remainingCards: randomlySort(cards),\n        isTopCardRevealed: false,\n        normalizedDelta: 0,\n        cardsToRepractice: [],\n      });\n    }\n  }\n\n  onAffirmationSwipeStart({ changedTouches }: React.TouchEvent) {\n    if (!this.state.isTopCardRevealed) {\n      return;\n    }\n\n    const isSwipeDirectionHorizontal = [\"Right\", \"Left\"].includes(\n      this.state.selectedSwipeDirection\n    );\n\n    const touch = isSwipeDirectionHorizontal\n      ? {\n          id: changedTouches[0].identifier,\n          x: changedTouches[0].clientX,\n        }\n      : {\n          id: changedTouches[0].identifier,\n          y: changedTouches[0].clientY,\n        };\n\n    this.setState({\n      startingTouch: touch,\n      normalizedDelta: 0,\n    });\n  }\n\n  onAffirmationSwipeMove(event: React.TouchEvent) {\n    event.preventDefault();\n    const { changedTouches } = event;\n    const { id } = this.state.startingTouch!;\n    const newTouch = Array.from(changedTouches).find(\n      (t) => t.identifier === id\n    );\n    if (!newTouch) {\n      return;\n    }\n    const isSwipeDirectionHorizontal = [\"Right\", \"Left\"].includes(\n      this.state.selectedSwipeDirection\n    );\n    if (isSwipeDirectionHorizontal) {\n      const deltaX = newTouch.clientX - this.state.startingTouch!.x!;\n      const normalizedDelta = Math.max(\n        -1,\n        Math.min(1, deltaX / HORIZONTAL_SWIPE_SIZE)\n      );\n      this.setState({\n        normalizedDelta,\n      });\n    } else {\n      const deltaY = newTouch.clientY - this.state.startingTouch!.y!;\n      const normalizedDelta = Math.max(\n        -1,\n        Math.min(1, deltaY / VERTICAL_SWIPE_SIZE)\n      );\n      this.setState({\n        normalizedDelta,\n      });\n    }\n  }\n\n  onAffirmationSwipeEnd() {\n    const { selectedSwipeDirection, normalizedDelta } = this.state;\n    this.setState({\n      startingTouch: null,\n      normalizedDelta: 0,\n    });\n    if (\n      (selectedSwipeDirection === \"Right\" && normalizedDelta === -1) ||\n      (selectedSwipeDirection === \"Left\" && normalizedDelta === 1) ||\n      (selectedSwipeDirection === \"Up\" && normalizedDelta === 1) ||\n      (selectedSwipeDirection === \"Down\" && normalizedDelta === -1)\n    ) {\n      this.onCardIncorrect();\n    } else if (\n      (selectedSwipeDirection === \"Right\" && normalizedDelta === 1) ||\n      (selectedSwipeDirection === \"Left\" && normalizedDelta === -1) ||\n      (selectedSwipeDirection === \"Up\" && normalizedDelta === -1) ||\n      (selectedSwipeDirection === \"Down\" && normalizedDelta === 1)\n    ) {\n      this.onCardCorrect();\n    }\n  }\n\n  onKeyUp({ key }: KeyboardEvent) {\n    if (this.state.isTopCardRevealed) {\n      const isSwipeDirectionHorizontal = [\"Right\", \"Left\"].includes(\n        this.state.selectedSwipeDirection\n      );\n\n      if (isSwipeDirectionHorizontal) {\n        if (key === \"ArrowRight\" || key === \"Right\") {\n          this.simulateRightSwipe();\n        } else if (key === \"ArrowLeft\" || key === \"Left\") {\n          this.simulateLeftSwipe();\n        }\n      } else {\n        if (key === \"ArrowUp\" || key === \"Up\") {\n          this.simulateUpSwipe();\n        } else if (key === \"ArrowDown\" || key === \"Down\") {\n          this.simulateDownSwipe();\n        }\n      }\n    }\n  }\n\n  onCardReveal() {\n    this.setState({\n      isTopCardRevealed: true,\n      normalizedDelta: 0,\n    });\n  }\n\n  onCardCorrect() {\n    if (this.state.type === \"WRITING_DRILL\") {\n      const { width, height } = this.canvasRef.current!;\n      const ctx = this.canvasRef.current!.getContext(\"2d\")!;\n      ctx.clearRect(0, 0, width, height);\n    }\n\n    this.setState(\n      ((prevState: AppState): Partial<AppState> => {\n        if (prevState.remainingCards.length > 1) {\n          return {\n            remainingCards: prevState.remainingCards.slice(1),\n            isTopCardRevealed: false,\n          };\n        }\n        return {\n          remainingCards: randomlySort(prevState.cardsToRepractice),\n          cardsToRepractice: [],\n          isTopCardRevealed: false,\n        };\n      }) as (prevState: AppState) => AppState\n    );\n  }\n\n  onCardIncorrect() {\n    if (this.state.type === \"WRITING_DRILL\") {\n      const { width, height } = this.canvasRef.current!;\n      const ctx = this.canvasRef.current!.getContext(\"2d\")!;\n      ctx.clearRect(0, 0, width, height);\n    }\n\n    this.setState((prevState) => {\n      if (prevState.remainingCards.length > 1) {\n        return {\n          remainingCards: prevState.remainingCards.slice(1),\n          cardsToRepractice: prevState.cardsToRepractice.concat([\n            prevState.remainingCards[0],\n          ]),\n          isTopCardRevealed: false,\n        };\n      }\n      return {\n        remainingCards: randomlySort(\n          prevState.cardsToRepractice.concat([prevState.remainingCards[0]])\n        ),\n        cardsToRepractice: [],\n        isTopCardRevealed: false,\n      };\n    });\n  }\n\n  onDrillRestart() {\n    if (\n      this.state.type === \"READING_DRILL\" ||\n      this.state.type === \"WRITING_DRILL\"\n    ) {\n      const deck = decks.find((d) => d.name === this.state.deckName)!;\n      const { name, cards } = deck;\n      this.setState({\n        type: this.state.type,\n        deckName: name,\n        remainingCards: randomlySort(cards),\n        isTopCardRevealed: false,\n        normalizedDelta: 0,\n        cardsToRepractice: [],\n      });\n    }\n  }\n\n  onHome() {\n    this.setState({\n      type: \"DECK_MENU\",\n    });\n  }\n\n  onPenStart(event: PointerDownEvent) {\n    const [clientX, clientY] =\n      event.type === \"touchstart\"\n        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n        : [event.clientX, event.clientY];\n    const offsetY = window.innerHeight * 0.11;\n    const adjustedY = clientY - offsetY;\n    this.previousPenLocation = {\n      x: clientX,\n      y: adjustedY,\n    };\n    const ctx = this.canvasRef.current!.getContext(\"2d\")!;\n    ctx.fillStyle = this.state.isTopCardRevealed\n      ? PEN_CORRECTION_COLOR\n      : PEN_GUESS_COLOR;\n    ctx.fillRect(\n      clientX,\n      clientY - offsetY,\n      PEN_STROKE_WIDTH,\n      PEN_STROKE_WIDTH\n    );\n  }\n\n  onPenMove(event: PointerMoveEvent) {\n    event.preventDefault();\n    if (this.previousPenLocation === null) {\n      return;\n    }\n\n    const [clientX, clientY] =\n      event.type === \"touchmove\"\n        ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY]\n        : [event.clientX, event.clientY];\n    const offsetY = window.innerHeight * 0.11;\n    const adjustedY = clientY - offsetY;\n    const ctx = this.canvasRef.current!.getContext(\"2d\")!;\n    ctx.fillRect(clientX, clientY - offsetY, 1, 1);\n    ctx.beginPath();\n    ctx.moveTo(this.previousPenLocation.x, this.previousPenLocation.y);\n    ctx.lineTo(clientX, adjustedY);\n    ctx.closePath();\n    ctx.lineWidth = PEN_STROKE_WIDTH;\n    ctx.strokeStyle = this.state.isTopCardRevealed\n      ? PEN_CORRECTION_COLOR\n      : PEN_GUESS_COLOR;\n    ctx.stroke();\n    this.previousPenLocation = {\n      x: clientX,\n      y: adjustedY,\n    };\n  }\n\n  onPenEnd() {\n    this.previousPenLocation = null;\n  }\n\n  simulateRightSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === \"Right\") {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.min(1, completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateLeftSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === \"Left\") {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.max(-1, -completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateUpSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === \"Up\") {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.max(-1, -completionFactor),\n      });\n    };\n    render();\n  }\n\n  simulateDownSwipe() {\n    const start = Date.now();\n    const render = () => {\n      const now = Date.now();\n      const completionFactor = (now - start) / SIMULATED_SWIPE_DURATION;\n      if (completionFactor < 1 + SIMULATED_SWIPE_PAUSE_FACTOR) {\n        requestAnimationFrame(render);\n      } else {\n        if (this.state.selectedSwipeDirection === \"Down\") {\n          this.onCardCorrect();\n        } else {\n          this.onCardIncorrect();\n        }\n      }\n      this.setState({\n        normalizedDelta: Math.min(1, completionFactor),\n      });\n    };\n    render();\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport CardsAgainstIlliteracy from \"./CardsAgainstIlliteracy\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CardsAgainstIlliteracy />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}